<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.cts.fasttack</groupId>
        <artifactId>fasttack</artifactId>
        <version>1.2.0-SNAPSHOT</version>
    </parent>

    <artifactId>admin-web</artifactId>
    <packaging>war</packaging>

    <name>admin-web</name>
    <description>Admin web module</description>

    <properties>
        <admin.web.build.timestamp>${maven.build.timestamp}</admin.web.build.timestamp>
        <admin.web.build.timestamp.format>yyyyMMddHHmmssSSS</admin.web.build.timestamp.format>

        <warSourceDirectory>${basedir}/src/main/webapp</warSourceDirectory>
        <warTargetDirectory>${basedir}/target/${project.artifactId}-${project.version}</warTargetDirectory>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <warSourceDirectory>${warSourceDirectory}</warSourceDirectory>
                    <webappDirectory>${warTargetDirectory}</webappDirectory>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <outputFileNameMapping>@{artifactId}@-@{baseVersion}@@{dashClassifier?}@.@{extension}@</outputFileNameMapping>
                    <archive>
                        <manifestEntries>
                            <Major-Version>${project.version}</Major-Version>
                            <Build-Number>${build.number}</Build-Number>
                            <Build-Time>${maven.build.timestamp}</Build-Time>
                            <Build-OS>${os.name}</Build-OS>
                        </manifestEntries>
                        <addMavenDescriptor>true</addMavenDescriptor>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <skip>${fasttack.spring.boot.skip}</skip>
                    <mainClass>com.cts.fasttack.admin.web.config.AdminWebApplication</mainClass>
                    <layout>WAR</layout>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>minify-js</id>

            <properties>
                <warSourceDirectory>${basedir}/target/war-source</warSourceDirectory>
            </properties>

            <build>
                <plugins>
                    <!-- Copy source webapp to be able to modify resources before WAR will be created without overwriting generated resources -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>2.6</version>
                        <executions>
                            <execution>
                                <id>copy-sources</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${warSourceDirectory}</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${basedir}/src/main/webapp</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Overwrite javascript and css with minified versions -->
                    <plugin>
                        <groupId>com.samaxes.maven</groupId>
                        <artifactId>minify-maven-plugin</artifactId>
                        <version>1.7.4</version>
                        <executions>
                            <execution>
                                <id>javascript-minify</id>
                                <phase>prepare-package</phase>
                                <configuration>
                                    <webappTargetDir>${warSourceDirectory}</webappTargetDir>
                                    <jsSourceDir>assets</jsSourceDir>
                                    <cssSourceDir>assets</cssSourceDir>
                                    <nosuffix>true</nosuffix>
                                    <skipMerge>true</skipMerge>
                                    <jsSourceIncludes>
                                        <jsSourceInclude>**/*.js</jsSourceInclude>
                                    </jsSourceIncludes>
                                    <jsSourceExcludes>
                                        <jsSourceExclude>**/*.min.js</jsSourceExclude>
                                    </jsSourceExcludes>

                                    <cssSourceIncludes>
                                        <cssSourceInclude>**/*.css</cssSourceInclude>
                                    </cssSourceIncludes>
                                    <cssSourceExcludes>
                                        <cssSourceExclude>**/*.min.css</cssSourceExclude>
                                    </cssSourceExcludes>
                                </configuration>
                                <goals>
                                    <goal>minify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-netflix</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- fasttack -->

        <dependency>
            <groupId>com.cts.fasttack</groupId>
            <artifactId>common-core</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.cts.fasttack</groupId>
            <artifactId>jms</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.cts.fasttack</groupId>
            <artifactId>logging</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- spring -->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-activemq</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-spring-boot-starter</artifactId>
            <version>${camel.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>tomcat-jdbc</artifactId>
                    <groupId>org.apache.tomcat</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <optional>true</optional>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>

        <!--<dependency>-->
            <!--<groupId>org.springframework.security</groupId>-->
            <!--<artifactId>spring-security-core</artifactId>-->
        <!--</dependency>-->

        <!-- apache -->

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.4</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons.io.version}</version>
        </dependency>

        <!-- jackson -->

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>

        <!-- db -->

        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>${hikari.version}</version>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>ojdbc7</artifactId>
            <version>${oracle.version}</version>
        </dependency>

        <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>ucp</artifactId>
            <version>${oracle.version}</version>
        </dependency>

        <!-- thymeleaf -->

        <dependency>
            <groupId>org.thymeleaf</groupId>
            <artifactId>thymeleaf-spring4</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>nz.net.ultraq.thymeleaf</groupId>
            <artifactId>thymeleaf-layout-dialect</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.thymeleaf.extras</groupId>
            <artifactId>thymeleaf-extras-springsecurity4</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>net.sourceforge.nekohtml</groupId>
            <artifactId>nekohtml</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.cts.fasttack</groupId>
            <artifactId>sms-client</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>com.sun.jersey</groupId>
                    <artifactId>jersey-client</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jersey</groupId>
                    <artifactId>jersey-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jersey.contribs</groupId>
                    <artifactId>jersey-apache-client4</artifactId>
                </exclusion>
                <!--<exclusion>-->
                    <!--<artifactId>bcpkix-jdk15on</artifactId>-->
                    <!--<groupId>org.bouncycastle</groupId>-->
                <!--</exclusion>-->
            </exclusions>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

</project>