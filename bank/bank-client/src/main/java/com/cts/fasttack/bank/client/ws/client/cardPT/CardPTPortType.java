package com.cts.fasttack.bank.client.ws.client.cardPT;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import com.cts.fasttack.bank.client.ws.client.ObjectFactory;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 *
 */
@WebService(name = "CardPTPortType", targetNamespace = "http://sab/")
@XmlSeeAlso({
        ObjectFactory.class
})
public interface CardPTPortType {


    /**
     * Выдает лог статусов логистики карты из ISCard
     *
     * @param cardHash
     * @return
     *     returns java.util.List<fasttack.ua.GetCardDeliveryStatusLogItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardDeliveryStatusLog")
    @WebResult(name = "getCardDeliveryStatusLogItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardDeliveryStatusLog", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDeliveryStatusLog")
    @ResponseWrapper(localName = "getCardDeliveryStatusLogResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDeliveryStatusLogResponse")
    public List<GetCardDeliveryStatusLogItem> getCardDeliveryStatusLog(
            @WebParam(name = "cardHash", targetNamespace = "http://sab/")
                    String cardHash)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * get card contracts by account number. USE: CFront.cardStatusId: 2-Аннулированная,1-Приостановленная,0-Активная. dealTypeId: 0-Частный,1-Корпоративный.
     *
     *
     * @param accountNo
     * @return
     *     returns java.util.List<fasttack.ua.CardDeal4>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardDealsByAccountNo")
    @WebResult(name = "cardDeal", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardDealsByAccountNo", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDealsByAccountNo")
    @ResponseWrapper(localName = "getCardDealsByAccountNoResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDealsByAccountNoResponse")
    public List<CardDeal4> getCardDealsByAccountNo(
            @WebParam(name = "accountNo", targetNamespace = "http://sab/")
                    String accountNo)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * удаление карточного договора. сервис удаляет неактивный карт договор.если договор не найден - сервис ничего не делает (считается, что операция выполнена). все проверки касательно активности договора, наличия транзакций, итд выполняет бек система согласно своих правил. на данный момент в системе искард неперсонифицированный неактивный договор не может быть найден и удален. (ошибки быть не должно). Mandatory fields: dealNo
     *
     *
     * @param dealNo
     * @return
     *     returns java.util.List<fasttack.ua.RemoveCardDealItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:removeCardDeal")
    @WebResult(name = "removeCardDealItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "removeCardDeal", targetNamespace = "http://sab/", className = "fasttack.ua.RemoveCardDeal")
    @ResponseWrapper(localName = "removeCardDealResponse", targetNamespace = "http://sab/", className = "fasttack.ua.RemoveCardDealResponse")
    public List<RemoveCardDealItem> removeCardDeal(
            @WebParam(name = "dealNo", targetNamespace = "http://sab/")
                    String dealNo)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Проверка возможности перевода на рассрочку транзакции, полученной по каналу Advice на рассрочку (Installment)
     *
     *
     * @param adviceId
     * @param mode
     * @param phoneNumber
     * @param equalAvlAmountIn
     * @return
     *     returns java.util.List<fasttack.ua.CheckInstallmentAvailabilityItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:checkInstallmentAvailability")
    @WebResult(name = "checkInstallmentAvailabilityItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "checkInstallmentAvailability", targetNamespace = "http://sab/", className = "fasttack.ua.CheckInstallmentAvailability")
    @ResponseWrapper(localName = "checkInstallmentAvailabilityResponse", targetNamespace = "http://sab/", className = "fasttack.ua.CheckInstallmentAvailabilityResponse")
    public List<CheckInstallmentAvailabilityItem> checkInstallmentAvailability(
            @WebParam(name = "adviceId", targetNamespace = "http://sab/")
                    Integer adviceId,
            @WebParam(name = "mode", targetNamespace = "http://sab/")
                    Integer mode,
            @WebParam(name = "phoneNumber", targetNamespace = "http://sab/")
                    String phoneNumber,
            @WebParam(name = "equalAvlAmountIn", targetNamespace = "http://sab/")
                    String equalAvlAmountIn)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Интерфейс для отключения услуги М-Банкинг. Метод не возвращает никаких параметров. При возникновении ошибки получаем FaultMessage.
     *
     *
     * @param cardId
     * @param cardHashNumber
     * @return
     *     returns java.util.List<fasttack.ua.DisableMBankingItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:disableMBanking")
    @WebResult(name = "disableMBankingItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "disableMBanking", targetNamespace = "http://sab/", className = "fasttack.ua.DisableMBanking")
    @ResponseWrapper(localName = "disableMBankingResponse", targetNamespace = "http://sab/", className = "fasttack.ua.DisableMBankingResponse")
    public List<DisableMBankingItem> disableMBanking(
            @WebParam(name = "cardHashNumber", targetNamespace = "http://sab/")
                    String cardHashNumber,
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    String cardId)
            throws DataServiceFault_Exception
    ;

    /**
     * Изменение тарифного плана карты в системе IS-Card
     *
     * @param contragentId
     * @param cardId
     * @param subproductCode
     * @param templateId
     * @return
     *     returns java.util.List<fasttack.ua.ChangeSubproductCodeItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:changeSubproductCode")
    @WebResult(name = "changeSubproductCodeItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "changeSubproductCode", targetNamespace = "http://sab/", className = "fasttack.ua.ChangeSubproductCode")
    @ResponseWrapper(localName = "changeSubproductCodeResponse", targetNamespace = "http://sab/", className = "fasttack.ua.ChangeSubproductCodeResponse")
    public List<ChangeSubproductCodeItem> changeSubproductCode(
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    Integer contragentId,
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    Integer cardId,
            @WebParam(name = "subproductCode", targetNamespace = "http://sab/")
                    String subproductCode,
            @WebParam(name = "templateId", targetNamespace = "http://sab/")
                    Integer templateId)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Проверка наличия вида обслуживания карты в списке видов обслуживания ко-брендинговых карт Wargaming
     *
     *
     * @param iTag
     * @param val
     * @return
     *     returns java.util.List<fasttack.ua.GetAvailIdArrayItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getAvailIdArray")
    @WebResult(name = "getAvailIdArrayItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getAvailIdArray", targetNamespace = "http://sab/", className = "fasttack.ua.GetAvailIdArray")
    @ResponseWrapper(localName = "getAvailIdArrayResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetAvailIdArrayResponse")
    public List<GetAvailIdArrayItem> getAvailIdArray(
            @WebParam(name = "iTag", targetNamespace = "http://sab/")
                    String iTag,
            @WebParam(name = "val", targetNamespace = "http://sab/")
                    String val)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Список способов доставки выписки и их ИД. USE: cfront.
     *
     *
     * @param reportDeliveryModeId
     * @return
     *     returns java.util.List<fasttack.ua.GetReportDeliveryModesItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getReportDeliveryModes")
    @WebResult(name = "getReportDeliveryModesItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getReportDeliveryModes", targetNamespace = "http://sab/", className = "fasttack.ua.GetReportDeliveryModes")
    @ResponseWrapper(localName = "getReportDeliveryModesResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetReportDeliveryModesResponse")
    public List<GetReportDeliveryModesItem> getReportDeliveryModes(
            @WebParam(name = "reportDeliveryModeId", targetNamespace = "http://sab/")
                    Integer reportDeliveryModeId)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Получение списка комиссий и их значений по карточному договору.
     *
     *
     * @param dealId
     * @param feeClassId
     * @return
     *     returns java.util.List<fasttack.ua.GetCardDealFeesItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardDealFees")
    @WebResult(name = "getCardDealFeesItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardDealFees", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDealFees")
    @ResponseWrapper(localName = "getCardDealFeesResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDealFeesResponse")
    public List<GetCardDealFeesItem> getCardDealFees(
            @WebParam(name = "dealId", targetNamespace = "http://sab/")
                    String dealId,
            @WebParam(name = "feeClassId", targetNamespace = "http://sab/")
                    String feeClassId)
            throws DataServiceFault_Exception
    ;

    /**
     * установка адреса доставки
     *
     * @param streetType
     * @param cardsCount
     * @param deliveryType
     * @param cityDistrict
     * @param cityId
     * @param messageIdPrimaryProcess
     * @param house
     * @param building
     * @param regionId
     * @param street
     * @param district
     * @param cardHashNumber
     * @param comment
     * @param shopId
     * @param apartment
     * @param primaryProcessCode
     * @return
     *     returns java.util.List<fasttack.ua.SetCardDeliveryAddressItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:setCardDeliveryAddress")
    @WebResult(name = "setCardDeliveryAddressItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "setCardDeliveryAddress", targetNamespace = "http://sab/", className = "fasttack.ua.SetCardDeliveryAddress")
    @ResponseWrapper(localName = "setCardDeliveryAddressResponse", targetNamespace = "http://sab/", className = "fasttack.ua.SetCardDeliveryAddressResponse")
    public List<SetCardDeliveryAddressItem> setCardDeliveryAddress(
            @WebParam(name = "cardHashNumber", targetNamespace = "http://sab/")
                    String cardHashNumber,
            @WebParam(name = "deliveryType", targetNamespace = "http://sab/")
                    String deliveryType,
            @WebParam(name = "regionId", targetNamespace = "http://sab/")
                    String regionId,
            @WebParam(name = "district", targetNamespace = "http://sab/")
                    String district,
            @WebParam(name = "cityId", targetNamespace = "http://sab/")
                    String cityId,
            @WebParam(name = "streetType", targetNamespace = "http://sab/")
                    String streetType,
            @WebParam(name = "street", targetNamespace = "http://sab/")
                    String street,
            @WebParam(name = "house", targetNamespace = "http://sab/")
                    String house,
            @WebParam(name = "building", targetNamespace = "http://sab/")
                    String building,
            @WebParam(name = "apartment", targetNamespace = "http://sab/")
                    String apartment,
            @WebParam(name = "comment", targetNamespace = "http://sab/")
                    String comment,
            @WebParam(name = "shopId", targetNamespace = "http://sab/")
                    String shopId,
            @WebParam(name = "messageIdPrimaryProcess", targetNamespace = "http://sab/")
                    String messageIdPrimaryProcess,
            @WebParam(name = "cardsCount", targetNamespace = "http://sab/")
                    Integer cardsCount,
            @WebParam(name = "cityDistrict", targetNamespace = "http://sab/")
                    String cityDistrict,
            @WebParam(name = "primaryProcessCode", targetNamespace = "http://sab/")
                    String primaryProcessCode)
            throws DataServiceFault_Exception
    ;

    /**
     * get card id by card number. USE: SIEBEL
     *
     * @param cardNumber
     * @return
     *     returns java.util.List<fasttack.ua.CardId>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardIdByCardNumber")
    @WebResult(name = "CardId", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardIdByCardNumber", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardIdByCardNumber")
    @ResponseWrapper(localName = "ID", targetNamespace = "http://sab/", className = "fasttack.ua.ID")
    public List<CardId> getCardIdByCardNumber(
            @WebParam(name = "cardNumber", targetNamespace = "http://sab/")
                    String cardNumber)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * get card contracts by DealNo. USE: MAB cardStatusId: 2-Аннулированная,1-Приостановленная,0-Активная. dealTypeId: 0-Частный,1-Корпоративный.
     *
     *
     * @param dealNo
     * @return
     *     returns java.util.List<fasttack.ua.CardDeal3>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardDealsByDealNo")
    @WebResult(name = "cardDeal", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardDealsByDealNo", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDealsByDealNo")
    @ResponseWrapper(localName = "getCardDealsByDealNoResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDealsByDealNoResponse")
    public List<CardDeal3> getCardDealsByDealNo(
            @WebParam(name = "dealNo", targetNamespace = "http://sab/")
                    String dealNo)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Активирует договор в ISCard (акцепт договора). Mandatory fields: contragentId, dealNo
     *
     *
     * @param contragentId
     * @param dealNo
     * @return
     *     returns java.util.List<fasttack.ua.ActivateCardDealItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:activateCardDeal")
    @WebResult(name = "activateCardDealItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "activateCardDeal", targetNamespace = "http://sab/", className = "fasttack.ua.ActivateCardDeal")
    @ResponseWrapper(localName = "activateCardDealResponse", targetNamespace = "http://sab/", className = "fasttack.ua.ActivateCardDealResponse")
    public List<ActivateCardDealItem> activateCardDeal(
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    String contragentId,
            @WebParam(name = "dealNo", targetNamespace = "http://sab/")
                    String dealNo)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Получить информацию о карточной сделке по штрих-коду
     *
     *
     * @param barCode
     * @return
     *     returns java.util.List<fasttack.ua.GetCardDealInfoByBarCodeItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardDealInfoByBarCode")
    @WebResult(name = "getCardDealInfoByBarCodeItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardDealInfoByBarCode", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDealInfoByBarCode")
    @ResponseWrapper(localName = "getCardDealInfoByBarCodeResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDealInfoByBarCodeResponse")
    public List<GetCardDealInfoByBarCodeItem> getCardDealInfoByBarCode(
            @WebParam(name = "barCode", targetNamespace = "http://sab/")
                    String barCode)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Технический метод, получения уникальной ИД для обращения в UPC(мин. значение 1, макс. 999999), Если в течении суток значение будет более 999999, то значения будут дублироваться.
     *
     *
     * @return
     *     returns java.util.List<fasttack.ua.GetUPCSessionUIDItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getUPCSessionUID")
    @WebResult(name = "getUPCSessionUIDItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getUPCSessionUID", targetNamespace = "http://sab/", className = "fasttack.ua.GetUPCSessionUID")
    @ResponseWrapper(localName = "getUPCSessionUIDResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetUPCSessionUIDResponse")
    public List<GetUPCSessionUIDItem> getUPCSessionUID()
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Получение актуального остатка в ИсКарде. Mandatory fields: system, process, user
     *
     *
     * @param process
     * @param system
     * @param dealId
     * @param accountNo
     * @param cardId
     * @param user
     * @return
     *     returns java.util.List<fasttack.ua.GetBalanceInIcItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getBalanceInIc")
    @WebResult(name = "getBalanceInIcItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getBalanceInIc", targetNamespace = "http://sab/", className = "fasttack.ua.GetBalanceInIc")
    @ResponseWrapper(localName = "getBalanceInIcResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetBalanceInIcResponse")
    public List<GetBalanceInIcItem> getBalanceInIc(
            @WebParam(name = "accountNo", targetNamespace = "http://sab/")
                    String accountNo,
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    Integer cardId,
            @WebParam(name = "dealId", targetNamespace = "http://sab/")
                    Integer dealId,
            @WebParam(name = "system", targetNamespace = "http://sab/")
                    String system,
            @WebParam(name = "process", targetNamespace = "http://sab/")
                    String process,
            @WebParam(name = "user", targetNamespace = "http://sab/")
                    String user)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Получение внешнего идентификатора технологического контрагента в БД IS-Card
     *
     *
     * @return
     *     returns java.util.List<fasttack.ua.GetExtClientPrivIdItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getExtClientPrivId")
    @WebResult(name = "getExtClientPrivIdItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getExtClientPrivId", targetNamespace = "http://sab/", className = "fasttack.ua.GetExtClientPrivId")
    @ResponseWrapper(localName = "getExtClientPrivIdResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetExtClientPrivIdResponse")
    public List<GetExtClientPrivIdItem> getExtClientPrivId()
            throws DataServiceFault_Exception
    ;

    /**
     *
     * возвращает карточные сделки только физических лиц! по ИНН USE: CFront.cardStatusId: 2-Аннулированная,1-Приостановленная,0-Активная. dealTypeId: 0-Частный,1-Корпоративный.
     *
     *
     * @param taxId
     * @param displayMode
     * @return
     *     returns java.util.List<fasttack.ua.CardDeal2>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardDealsByTaxId")
    @WebResult(name = "cardDeal", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardDealsByTaxId", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDealsByTaxId")
    @ResponseWrapper(localName = "getCardDealsByTaxIdResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDealsByTaxIdResponse")
    public List<CardDeal2> getCardDealsByTaxId(
            @WebParam(name = "taxId", targetNamespace = "http://sab/")
                    String taxId,
            @WebParam(name = "displayMode", targetNamespace = "http://sab/")
                    Integer displayMode)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Получение информации по активным на текущий момент рассрочкам, открытых в рамках договора
     *
     *
     * @param contractID
     * @return
     *     returns java.util.List<fasttack.ua.GetActiveInstallmentsInfoItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getActiveInstallmentsInfo")
    @WebResult(name = "getActiveInstallmentsInfoItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getActiveInstallmentsInfo", targetNamespace = "http://sab/", className = "fasttack.ua.GetActiveInstallmentsInfo")
    @ResponseWrapper(localName = "getActiveInstallmentsInfoResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetActiveInstallmentsInfoResponse")
    public List<GetActiveInstallmentsInfoItem> getActiveInstallmentsInfo(
            @WebParam(name = "contractID", targetNamespace = "http://sab/")
                    Long contractID)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Установка карты в стоп-список в процессе подгрузки файла
     *
     *
     * @param cardHashNum
     * @param cardId
     * @param businesStopCode
     * @return
     *     returns java.util.List<fasttack.ua.InsBsnStopAfterEmbItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:insBsnStopAfterEmb")
    @WebResult(name = "insBsnStopAfterEmbItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "insBsnStopAfterEmb", targetNamespace = "http://sab/", className = "fasttack.ua.InsBsnStopAfterEmb")
    @ResponseWrapper(localName = "insBsnStopAfterEmbResponse", targetNamespace = "http://sab/", className = "fasttack.ua.InsBsnStopAfterEmbResponse")
    public List<InsBsnStopAfterEmbItem> insBsnStopAfterEmb(
            @WebParam(name = "cardHashNum", targetNamespace = "http://sab/")
                    String cardHashNum,
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    Integer cardId,
            @WebParam(name = "businesStopCode", targetNamespace = "http://sab/")
                    String businesStopCode)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Запись ответа Клиента на предложение рассрочки (Installment) в виде "больше не беспокоить". Указать либо contragentId, либо phoneNumber либо adviceId.
     *
     *
     * @param adviceId
     * @param phoneNumber
     * @param contragentId
     * @param status
     * @return
     *     returns java.util.List<fasttack.ua.SetDNDStatusItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:setDNDStatus")
    @WebResult(name = "setDNDStatusItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "setDNDStatus", targetNamespace = "http://sab/", className = "fasttack.ua.SetDNDStatus")
    @ResponseWrapper(localName = "setDNDStatusResponse", targetNamespace = "http://sab/", className = "fasttack.ua.SetDNDStatusResponse")
    public List<SetDNDStatusItem> setDNDStatus(
            @WebParam(name = "adviceId", targetNamespace = "http://sab/")
                    Integer adviceId,
            @WebParam(name = "phoneNumber", targetNamespace = "http://sab/")
                    String phoneNumber,
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    String contragentId,
            @WebParam(name = "status", targetNamespace = "http://sab/")
                    Integer status)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * старое название метода activateSmsDelivery. переименован т.к.никто не использует. выполняет активацию смс информирования по карте. Mandatory fields: cardHashNumber, phoneNumber
     *
     *
     * @param phoneNumber
     * @param cardHashNumber
     * @return
     *     returns java.util.List<fasttack.ua.EnableMBankingItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:enableMBanking")
    @WebResult(name = "enableMBankingItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "enableMBanking", targetNamespace = "http://sab/", className = "fasttack.ua.EnableMBanking")
    @ResponseWrapper(localName = "enableMBankingResponse", targetNamespace = "http://sab/", className = "fasttack.ua.EnableMBankingResponse")
    public List<EnableMBankingItem> enableMBanking(
            @WebParam(name = "cardHashNumber", targetNamespace = "http://sab/")
                    String cardHashNumber,
            @WebParam(name = "phoneNumber", targetNamespace = "http://sab/")
                    String phoneNumber)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Получение из Is-Card статуса карты, штрих-кода и стоп-листа
     *
     *
     * @param iCardHashNumber
     * @param iCardid
     * @return
     *     returns java.util.List<fasttack.ua.GetCardInfoItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardInfo")
    @WebResult(name = "getCardInfoItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardInfo", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardInfo")
    @ResponseWrapper(localName = "getCardInfoResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardInfoResponse")
    public List<GetCardInfoItem> getCardInfo(
            @WebParam(name = "iCardHashNumber", targetNamespace = "http://sab/")
                    String iCardHashNumber,
            @WebParam(name = "iCardid", targetNamespace = "http://sab/")
                    Integer iCardid)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Изменения способа доставки выписки Mandatory fields: deliveryType
     *
     *
     * @param addrCity
     * @param addrPostcode
     * @param addrStreet
     * @param addrFlat
     * @param deliveryType
     * @param addrHouseNo
     * @param addrBuildNo
     * @param dealNo
     * @param addrCountry
     * @param addrRegion
     * @param addrDistrict
     * @param email
     * @return
     *     returns java.util.List<fasttack.ua.SetStatementModeItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:setStatementMode")
    @WebResult(name = "setStatementModeItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "setStatementMode", targetNamespace = "http://sab/", className = "fasttack.ua.SetStatementMode")
    @ResponseWrapper(localName = "setStatementModeResponse", targetNamespace = "http://sab/", className = "fasttack.ua.SetStatementModeResponse")
    public List<SetStatementModeItem> setStatementMode(
            @WebParam(name = "dealNo", targetNamespace = "http://sab/")
                    String dealNo,
            @WebParam(name = "deliveryType", targetNamespace = "http://sab/")
                    Integer deliveryType,
            @WebParam(name = "addrCountry", targetNamespace = "http://sab/")
                    String addrCountry,
            @WebParam(name = "addrPostcode", targetNamespace = "http://sab/")
                    String addrPostcode,
            @WebParam(name = "addrCity", targetNamespace = "http://sab/")
                    String addrCity,
            @WebParam(name = "addrRegion", targetNamespace = "http://sab/")
                    String addrRegion,
            @WebParam(name = "addrDistrict", targetNamespace = "http://sab/")
                    String addrDistrict,
            @WebParam(name = "addrStreet", targetNamespace = "http://sab/")
                    String addrStreet,
            @WebParam(name = "addrHouseNo", targetNamespace = "http://sab/")
                    String addrHouseNo,
            @WebParam(name = "addrFlat", targetNamespace = "http://sab/")
                    String addrFlat,
            @WebParam(name = "addrBuildNo", targetNamespace = "http://sab/")
                    String addrBuildNo,
            @WebParam(name = "email", targetNamespace = "http://sab/")
                    String email)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * DEPRECATED. В любой момент сервис может быть отключен.
     *
     *
     * @param balanceNo
     * @param cardId
     * @return
     *     returns java.util.List<fasttack.ua.GetCardInfoByCardIdItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardInfoByCardId")
    @WebResult(name = "getCardInfoByCardIdItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardInfoByCardId", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardInfoByCardId")
    @ResponseWrapper(localName = "getCardInfoByCardIdResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardInfoByCardIdResponse")
    public List<GetCardInfoByCardIdItem> getCardInfoByCardId(
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    String cardId,
            @WebParam(name = "balanceNo", targetNamespace = "http://sab/")
                    String balanceNo)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * get card contract by deal id. cardStatusId: 2-Аннулированная,1-Приостановленная,0-Активная. dealTypeId: 0-Частный,1-Корпоративный.
     *
     *
     * @param dealId
     * @return
     *     returns java.util.List<fasttack.ua.CardDeal>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardDealByDealId")
    @WebResult(name = "cardDeal", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardDealByDealId", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDealByDealId")
    @ResponseWrapper(localName = "getCardDealByDealIdResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDealByDealIdResponse")
    public List<CardDeal> getCardDealByDealId(
            @WebParam(name = "dealId", targetNamespace = "http://sab/")
                    String dealId)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * @param cardId
     * @param cardHashNumber
     * @return
     *     returns java.util.List<fasttack.ua.GetCardDailyLimitsItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardDailyLimits")
    @WebResult(name = "getCardDailyLimitsItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardDailyLimits", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDailyLimits")
    @ResponseWrapper(localName = "getCardDailyLimitsResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDailyLimitsResponse")
    public List<GetCardDailyLimitsItem> getCardDailyLimits(
            @WebParam(name = "cardHashNumber", targetNamespace = "http://sab/")
                    String cardHashNumber,
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    String cardId)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * DEPRECATED. get card information (cardid, expireDate) by card accountNoUSE: MAB
     *
     *
     * @param accountNo
     * @return
     *     returns java.util.List<fasttack.ua.GetCardInfoByAccountNoItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardInfoByAccountNo")
    @WebResult(name = "getCardInfoByAccountNoItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardInfoByAccountNo", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardInfoByAccountNo")
    @ResponseWrapper(localName = "getCardInfoByAccountNoResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardInfoByAccountNoResponse")
    public List<GetCardInfoByAccountNoItem> getCardInfoByAccountNo(
            @WebParam(name = "accountNo", targetNamespace = "http://sab/")
                    String accountNo)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * DEPRECATED. get card deal info (overdraftAmount,creditLimit,minPayment,minPaymentDate) by iscard deal id USE: SIEBEL
     *
     *
     * @param icDealId
     * @return
     *     returns java.util.List<fasttack.ua.CardDealInfo>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardDealInfoByICDealId")
    @WebResult(name = "cardDealInfo", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardDealInfoByICDealId", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDealInfoByICDealId")
    @ResponseWrapper(localName = "cardDealInfoList", targetNamespace = "http://sab/", className = "fasttack.ua.CardDealInfoList")
    public List<CardDealInfo> getCardDealInfoByICDealId(
            @WebParam(name = "icDealId", targetNamespace = "http://sab/")
                    String icDealId)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * get billing report in text mode by account number and date period. This report client receives from UPC (if subscribed). USE: SIEBEL
     *
     *
     * @param reportType
     * @param accountNo
     * @param periodBegin
     * @param periodEnd
     * @return
     *     returns java.util.List<fasttack.ua.ReportLine>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardAccountBillingReport")
    @WebResult(name = "reportLine", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardAccountBillingReport", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardAccountBillingReport")
    @ResponseWrapper(localName = "cardAccountBillingReport", targetNamespace = "http://sab/", className = "fasttack.ua.CardAccountBillingReport")
    public List<ReportLine> getCardAccountBillingReport(
            @WebParam(name = "accountNo", targetNamespace = "http://sab/")
                    String accountNo,
            @WebParam(name = "periodBegin", targetNamespace = "http://sab/")
                    XMLGregorianCalendar periodBegin,
            @WebParam(name = "periodEnd", targetNamespace = "http://sab/")
                    XMLGregorianCalendar periodEnd,
            @WebParam(name = "reportType", targetNamespace = "http://sab/")
                    String reportType)
            throws DataServiceFault_Exception
    ;

    /**
     * Перевыпуск карты Mandatory fields: cardHashNumber
     *
     * @param lastNameLatin
     * @param branchId
     * @param isPersonalized
     * @param cardHashNumber
     * @param chargeRenewFee
     * @param recreateType
     * @param oldCardStatus
     * @param firstNameLatin
     * @param projectId
     * @return
     *     returns java.util.List<fasttack.ua.RecreateCardItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:recreateCard")
    @WebResult(name = "recreateCardItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "recreateCard", targetNamespace = "http://sab/", className = "fasttack.ua.RecreateCard")
    @ResponseWrapper(localName = "recreateCardResponse", targetNamespace = "http://sab/", className = "fasttack.ua.RecreateCardResponse")
    public List<RecreateCardItem> recreateCard(
            @WebParam(name = "cardHashNumber", targetNamespace = "http://sab/")
                    String cardHashNumber,
            @WebParam(name = "recreateType", targetNamespace = "http://sab/")
                    Integer recreateType,
            @WebParam(name = "branchId", targetNamespace = "http://sab/")
                    String branchId,
            @WebParam(name = "oldCardStatus", targetNamespace = "http://sab/")
                    Integer oldCardStatus,
            @WebParam(name = "chargeRenewFee", targetNamespace = "http://sab/")
                    Integer chargeRenewFee,
            @WebParam(name = "firstNameLatin", targetNamespace = "http://sab/")
                    String firstNameLatin,
            @WebParam(name = "lastNameLatin", targetNamespace = "http://sab/")
                    String lastNameLatin,
            @WebParam(name = "projectId", targetNamespace = "http://sab/")
                    Integer projectId,
            @WebParam(name = "isPersonalized", targetNamespace = "http://sab/")
                    Integer isPersonalized)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Получение информации о договоре и клиенте для передачи в Siebel
     *
     *
     * @param contragentId
     * @param dealNo
     * @return
     *     returns java.util.List<fasttack.ua.GetFinCorpAccBySiebelItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getFinCorpAccBySiebel")
    @WebResult(name = "getFinCorpAccBySiebelItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getFinCorpAccBySiebel", targetNamespace = "http://sab/", className = "fasttack.ua.GetFinCorpAccBySiebel")
    @ResponseWrapper(localName = "getFinCorpAccBySiebelResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetFinCorpAccBySiebelResponse")
    public List<GetFinCorpAccBySiebelItem> getFinCorpAccBySiebel(
            @WebParam(name = "dealNo", targetNamespace = "http://sab/")
                    String dealNo,
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    String contragentId)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Интерфейс перевода карты в другое РЦ/отделение по хеш или ID карты.
     *
     *
     * @param branchId
     * @param cardHashNum
     * @param cardId
     * @return
     *     returns java.util.List<fasttack.ua.ChangeBranchCodeItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:changeBranchCode")
    @WebResult(name = "changeBranchCodeItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "changeBranchCode", targetNamespace = "http://sab/", className = "fasttack.ua.ChangeBranchCode")
    @ResponseWrapper(localName = "changeBranchCodeResponse", targetNamespace = "http://sab/", className = "fasttack.ua.ChangeBranchCodeResponse")
    public List<ChangeBranchCodeItem> changeBranchCode(
            @WebParam(name = "cardHashNum", targetNamespace = "http://sab/")
                    String cardHashNum,
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    Integer cardId,
            @WebParam(name = "branchId", targetNamespace = "http://sab/")
                    Integer branchId)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Перевод на рассрочку (Installment) транзакции, полученной по каналу Advice
     *
     *
     * @param adviceId
     * @param phoneNumber
     * @param equalAvlAmountIn
     * @param subproductCode
     * @param channel
     * @return
     *     returns java.util.List<fasttack.ua.ProcessInstallmentItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:processInstallment")
    @WebResult(name = "processInstallmentItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "processInstallment", targetNamespace = "http://sab/", className = "fasttack.ua.ProcessInstallment")
    @ResponseWrapper(localName = "processInstallmentResponse", targetNamespace = "http://sab/", className = "fasttack.ua.ProcessInstallmentResponse")
    public List<ProcessInstallmentItem> processInstallment(
            @WebParam(name = "adviceId", targetNamespace = "http://sab/")
                    Integer adviceId,
            @WebParam(name = "subproductCode", targetNamespace = "http://sab/")
                    String subproductCode,
            @WebParam(name = "channel", targetNamespace = "http://sab/")
                    String channel,
            @WebParam(name = "phoneNumber", targetNamespace = "http://sab/")
                    String phoneNumber,
            @WebParam(name = "equalAvlAmountIn", targetNamespace = "http://sab/")
                    String equalAvlAmountIn)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Получение	актуальных остатков (балансов) по карте. ТОЛЬКО ДЛЯ ВНУТРЕННЕГО ИСПОЛЬЗОВАНИЯ ESB!
     *
     *
     * @param contractId
     * @param accountNumber
     * @return
     *     returns java.util.List<fasttack.ua.GetActualBalanceByCardItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getActualBalanceByCard")
    @WebResult(name = "getActualBalanceByCardItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getActualBalanceByCard", targetNamespace = "http://sab/", className = "fasttack.ua.GetActualBalanceByCard")
    @ResponseWrapper(localName = "getActualBalanceByCardResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetActualBalanceByCardResponse")
    public List<GetActualBalanceByCardItem> getActualBalanceByCard(
            @WebParam(name = "contractId", targetNamespace = "http://sab/")
                    Integer contractId,
            @WebParam(name = "accountNumber", targetNamespace = "http://sab/")
                    String accountNumber)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Вычисление платежной системы по первым четырем цифрам номера карты
     *
     *
     * @param pan
     * @return
     *     returns java.util.List<fasttack.ua.GetIPSItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getIPS")
    @WebResult(name = "getIPSItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getIPS", targetNamespace = "http://sab/", className = "fasttack.ua.GetIPS")
    @ResponseWrapper(localName = "getIPSResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetIPSResponse")
    public List<GetIPSItem> getIPS(
            @WebParam(name = "pan", targetNamespace = "http://sab/")
                    String pan)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Перепривязка договора к реальному контрагенту в БД IS-Card ClientRebinding
     *
     *
     * @param contragentId
     * @param dealNo
     * @return
     *     returns java.util.List<fasttack.ua.ClientRebindingItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:clientRebinding")
    @WebResult(name = "clientRebindingItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "clientRebinding", targetNamespace = "http://sab/", className = "fasttack.ua.ClientRebinding")
    @ResponseWrapper(localName = "clientRebindingResponse", targetNamespace = "http://sab/", className = "fasttack.ua.ClientRebindingResponse")
    public List<ClientRebindingItem> clientRebinding(
            @WebParam(name = "dealNo", targetNamespace = "http://sab/")
                    String dealNo,
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    Integer contragentId)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Получение карточного счета по номеру карты/хеш номеру или Id карты
     *
     *
     * @param cardId
     * @param hashNum
     * @return
     *     returns java.util.List<fasttack.ua.AccountNumberItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getAccountInfoByCardNumber")
    @WebResult(name = "accountNumberItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getAccountInfoByCardNumber", targetNamespace = "http://sab/", className = "fasttack.ua.GetAccountInfoByCardNumber")
    @ResponseWrapper(localName = "getAccountInfoByCardNumberResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetAccountInfoByCardNumberResponse")
    public List<AccountNumberItem> getAccountInfoByCardNumber(
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    String cardId,
            @WebParam(name = "hashNum", targetNamespace = "http://sab/")
                    String hashNum)
            throws DataServiceFault_Exception
    ;

    /**
     * Получение карт по Id контрагента
     *
     * @param cardStatusId
     * @param contragentId
     * @param cardNoXXX
     * @param isPrimary
     * @param cardId
     * @param accStatusId
     * @param projectType
     * @param expireDate
     * @return
     *     returns java.util.List<fasttack.ua.GetCardsByContragentIdItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardsByContragentId")
    @WebResult(name = "getCardsByContragentIdItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardsByContragentId", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardsByContragentId")
    @ResponseWrapper(localName = "getCardsByContragentIdResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardsByContragentIdResponse")
    public List<GetCardsByContragentIdItem> getCardsByContragentId(
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    String contragentId,
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    String cardId,
            @WebParam(name = "cardNoXXX", targetNamespace = "http://sab/")
                    String cardNoXXX,
            @WebParam(name = "cardStatusId", targetNamespace = "http://sab/")
                    Integer cardStatusId,
            @WebParam(name = "isPrimary", targetNamespace = "http://sab/")
                    Integer isPrimary,
            @WebParam(name = "expireDate", targetNamespace = "http://sab/")
                    XMLGregorianCalendar expireDate,
            @WebParam(name = "projectType", targetNamespace = "http://sab/")
                    String projectType,
            @WebParam(name = "accStatusId", targetNamespace = "http://sab/")
                    Integer accStatusId)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Функция setCardStopList добавляет/удаляет карту в/из стоп лист(а) ISCard. Возвращает код, который используется в функции прокси сервиса CardOnline [setCardStopListByCardId|http://confluence.forum.kiev.ua.alfabank/display/systems/Middleware+CardOnline+SOAP+interface#Operation-setCardStopListByCardId]. На основании возвращенного кода принимается решение, отправлять ли информацию в UPC.
     *
     *
     * @param code
     * @param cardId
     * @param initiator
     * @param cardHashNumber
     * @param comment
     * @return
     *     returns java.util.List<fasttack.ua.SetCardStopListItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:setCardStopList")
    @WebResult(name = "setCardStopListItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "setCardStopList", targetNamespace = "http://sab/", className = "fasttack.ua.SetCardStopList")
    @ResponseWrapper(localName = "setCardStopListResponse", targetNamespace = "http://sab/", className = "fasttack.ua.SetCardStopListResponse")
    public List<SetCardStopListItem> setCardStopList(
            @WebParam(name = "cardHashNumber", targetNamespace = "http://sab/")
                    String cardHashNumber,
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    Integer cardId,
            @WebParam(name = "code", targetNamespace = "http://sab/")
                    String code,
            @WebParam(name = "comment", targetNamespace = "http://sab/")
                    String comment,
            @WebParam(name = "initiator", targetNamespace = "http://sab/")
                    String initiator)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Получение статуса и дополнительной информации по доставке карты.
     *
     *
     * @param cardPrefix
     * @param cardHash
     * @param dateFileGenFrom
     * @param cardDeliveryStatus
     * @param chipExist
     * @param dateCreateTo
     * @param cardSuffix
     * @param manufacturer
     * @param plantDeliveryPoint
     * @param dateExpTo
     * @param cardProject
     * @param dateLastChangeFrom
     * @param deliveryRegionCode
     * @param shopId
     * @param urgent
     * @param barcode
     * @param embCardName
     * @param renewLabel
     * @param dateLastChangeTo
     * @param deliveryDistrictCode
     * @param datePersonTo
     * @param dateOnPrintFrom
     * @param datePersonFrom
     * @param dateOnPrintTo
     * @param dateExpFrom
     * @param dateFileGenTo
     * @param dateCreateFrom
     * @return
     *     returns java.util.List<fasttack.ua.GetCardDeliveryStatusItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardDeliveryStatus")
    @WebResult(name = "getCardDeliveryStatusItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardDeliveryStatus", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDeliveryStatus")
    @ResponseWrapper(localName = "getCardDeliveryStatusResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDeliveryStatusResponse")
    public List<GetCardDeliveryStatusItem> getCardDeliveryStatus(
            @WebParam(name = "cardHash", targetNamespace = "http://sab/")
                    String cardHash,
            @WebParam(name = "cardDeliveryStatus", targetNamespace = "http://sab/")
                    String cardDeliveryStatus,
            @WebParam(name = "plantDeliveryPoint", targetNamespace = "http://sab/")
                    String plantDeliveryPoint,
            @WebParam(name = "shopId", targetNamespace = "http://sab/")
                    String shopId,
            @WebParam(name = "embCardName", targetNamespace = "http://sab/")
                    String embCardName,
            @WebParam(name = "cardPrefix", targetNamespace = "http://sab/")
                    String cardPrefix,
            @WebParam(name = "cardSuffix", targetNamespace = "http://sab/")
                    String cardSuffix,
            @WebParam(name = "cardProject", targetNamespace = "http://sab/")
                    String cardProject,
            @WebParam(name = "dateCreateFrom", targetNamespace = "http://sab/")
                    XMLGregorianCalendar dateCreateFrom,
            @WebParam(name = "dateCreateTo", targetNamespace = "http://sab/")
                    XMLGregorianCalendar dateCreateTo,
            @WebParam(name = "datePersonFrom", targetNamespace = "http://sab/")
                    XMLGregorianCalendar datePersonFrom,
            @WebParam(name = "datePersonTo", targetNamespace = "http://sab/")
                    XMLGregorianCalendar datePersonTo,
            @WebParam(name = "dateFileGenFrom", targetNamespace = "http://sab/")
                    XMLGregorianCalendar dateFileGenFrom,
            @WebParam(name = "dateFileGenTo", targetNamespace = "http://sab/")
                    XMLGregorianCalendar dateFileGenTo,
            @WebParam(name = "dateExpFrom", targetNamespace = "http://sab/")
                    XMLGregorianCalendar dateExpFrom,
            @WebParam(name = "dateExpTo", targetNamespace = "http://sab/")
                    XMLGregorianCalendar dateExpTo,
            @WebParam(name = "dateLastChangeFrom", targetNamespace = "http://sab/")
                    XMLGregorianCalendar dateLastChangeFrom,
            @WebParam(name = "dateLastChangeTo", targetNamespace = "http://sab/")
                    XMLGregorianCalendar dateLastChangeTo,
            @WebParam(name = "manufacturer", targetNamespace = "http://sab/")
                    String manufacturer,
            @WebParam(name = "renewLabel", targetNamespace = "http://sab/")
                    String renewLabel,
            @WebParam(name = "chipExist", targetNamespace = "http://sab/")
                    String chipExist,
            @WebParam(name = "urgent", targetNamespace = "http://sab/")
                    String urgent,
            @WebParam(name = "deliveryRegionCode", targetNamespace = "http://sab/")
                    String deliveryRegionCode,
            @WebParam(name = "deliveryDistrictCode", targetNamespace = "http://sab/")
                    String deliveryDistrictCode,
            @WebParam(name = "barcode", targetNamespace = "http://sab/")
                    String barcode,
            @WebParam(name = "dateOnPrintFrom", targetNamespace = "http://sab/")
                    XMLGregorianCalendar dateOnPrintFrom,
            @WebParam(name = "dateOnPrintTo", targetNamespace = "http://sab/")
                    XMLGregorianCalendar dateOnPrintTo)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Activate card by first letters of: card number, tax id, passport number, phone number
     *
     *
     * @param passportNumber
     * @param phoneNumber
     * @param taxId
     * @param cardNumber
     * @return
     *     returns java.util.List<fasttack.ua.ActivateCardStatus>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:activateCard")
    @WebResult(name = "activateCardStatus", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "activateCard", targetNamespace = "http://sab/", className = "fasttack.ua.ActivateCard")
    @ResponseWrapper(localName = "activateCardStatuses", targetNamespace = "http://sab/", className = "fasttack.ua.ActivateCardStatuses")
    public List<ActivateCardStatus> activateCard(
            @WebParam(name = "cardNumber", targetNamespace = "http://sab/")
                    String cardNumber,
            @WebParam(name = "taxId", targetNamespace = "http://sab/")
                    String taxId,
            @WebParam(name = "passportNumber", targetNamespace = "http://sab/")
                    String passportNumber,
            @WebParam(name = "phoneNumber", targetNamespace = "http://sab/")
                    String phoneNumber)
            throws DataServiceFault_Exception
    ;

    /**
     * Mandatory fields: endDate
     *
     * @param purchaseMaxAmount
     * @param purchaseMaxCount
     * @param totalMaxCount
     * @param endDate
     * @param cashMaxAmount
     * @param cardId
     * @param cashMaxCount
     * @param cardHashNumber
     * @param totalMaxAmount
     * @return
     *     returns java.util.List<fasttack.ua.SetCardDailyLimitsItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:setCardDailyLimits")
    @WebResult(name = "setCardDailyLimitsItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "setCardDailyLimits", targetNamespace = "http://sab/", className = "fasttack.ua.SetCardDailyLimits")
    @ResponseWrapper(localName = "setCardDailyLimitsResponse", targetNamespace = "http://sab/", className = "fasttack.ua.SetCardDailyLimitsResponse")
    public List<SetCardDailyLimitsItem> setCardDailyLimits(
            @WebParam(name = "cardHashNumber", targetNamespace = "http://sab/")
                    String cardHashNumber,
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    String cardId,
            @WebParam(name = "cashMaxAmount", targetNamespace = "http://sab/")
                    Long cashMaxAmount,
            @WebParam(name = "cashMaxCount", targetNamespace = "http://sab/")
                    Integer cashMaxCount,
            @WebParam(name = "purchaseMaxAmount", targetNamespace = "http://sab/")
                    Long purchaseMaxAmount,
            @WebParam(name = "purchaseMaxCount", targetNamespace = "http://sab/")
                    Integer purchaseMaxCount,
            @WebParam(name = "totalMaxAmount", targetNamespace = "http://sab/")
                    Long totalMaxAmount,
            @WebParam(name = "totalMaxCount", targetNamespace = "http://sab/")
                    Integer totalMaxCount,
            @WebParam(name = "endDate", targetNamespace = "http://sab/")
                    XMLGregorianCalendar endDate)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * получить список операций по карт счету за указанный период. текущая система не позволяет получить время операции/транзакции... считаем это фичей и ждем что когда-нибудь исправят... Mandatory fields: accountNo
     *
     *
     * @param accountNo
     * @param periodBegin
     * @param periodEnd
     * @return
     *     returns java.util.List<fasttack.ua.CardAccountOperationItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardAccountOperations")
    @WebResult(name = "cardAccountOperationItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardAccountOperations", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardAccountOperations")
    @ResponseWrapper(localName = "cardAccountOperationList", targetNamespace = "http://sab/", className = "fasttack.ua.CardAccountOperationList")
    public List<CardAccountOperationItem> getCardAccountOperations(
            @WebParam(name = "accountNo", targetNamespace = "http://sab/")
                    String accountNo,
            @WebParam(name = "periodBegin", targetNamespace = "http://sab/")
                    XMLGregorianCalendar periodBegin,
            @WebParam(name = "periodEnd", targetNamespace = "http://sab/")
                    XMLGregorianCalendar periodEnd)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Процедура закрытия договора(-ов), счета(-ов), аннулирования карт(ы), открытых на технического контрагента.
     *
     *
     * @param dealId
     * @return
     *     returns java.util.List<fasttack.ua.CancelCardDealItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:cancelCardDeal")
    @WebResult(name = "cancelCardDealItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "cancelCardDeal", targetNamespace = "http://sab/", className = "fasttack.ua.CancelCardDeal")
    @ResponseWrapper(localName = "cancelCardDealResponse", targetNamespace = "http://sab/", className = "fasttack.ua.CancelCardDealResponse")
    public List<CancelCardDealItem> cancelCardDeal(
            @WebParam(name = "dealId", targetNamespace = "http://sab/")
                    Integer dealId)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Инициализация заказа платежной карты на перевыпуск.
     *
     *
     * @param insuranceFinRiskStatus
     * @param branchId
     * @param nameOnCard
     * @param deliveryAddress
     * @param cardId
     * @param chargeRenewFee
     * @param newCardProduct
     * @param recreateType
     * @param deliveryName
     * @return
     *     returns java.util.List<fasttack.ua.SetDeferredRenewCardItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:setDeferredRenewCard")
    @WebResult(name = "setDeferredRenewCardItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "setDeferredRenewCard", targetNamespace = "http://sab/", className = "fasttack.ua.SetDeferredRenewCard")
    @ResponseWrapper(localName = "setDeferredRenewCardResponse", targetNamespace = "http://sab/", className = "fasttack.ua.SetDeferredRenewCardResponse")
    public List<SetDeferredRenewCardItem> setDeferredRenewCard(
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    String cardId,
            @WebParam(name = "branchId", targetNamespace = "http://sab/")
                    String branchId,
            @WebParam(name = "chargeRenewFee", targetNamespace = "http://sab/")
                    Integer chargeRenewFee,
            @WebParam(name = "nameOnCard", targetNamespace = "http://sab/")
                    String nameOnCard,
            @WebParam(name = "newCardProduct", targetNamespace = "http://sab/")
                    String newCardProduct,
            @WebParam(name = "insuranceFinRiskStatus", targetNamespace = "http://sab/")
                    Integer insuranceFinRiskStatus,
            @WebParam(name = "deliveryName", targetNamespace = "http://sab/")
                    String deliveryName,
            @WebParam(name = "deliveryAddress", targetNamespace = "http://sab/")
                    String deliveryAddress,
            @WebParam(name = "recreateType", targetNamespace = "http://sab/")
                    Integer recreateType)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Возвращает информацию о статусе услуги «Мониторинг неуспешных операций» по клиенту и по всем картам. Mandatory fields: contragentId
     *
     *
     * @param contragentId
     * @return
     *     returns java.util.List<fasttack.ua.GetStatusMonitoringTransactionsItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getStatusMonitoringTransactions")
    @WebResult(name = "getStatusMonitoringTransactionsItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getStatusMonitoringTransactions", targetNamespace = "http://sab/", className = "fasttack.ua.GetStatusMonitoringTransactions")
    @ResponseWrapper(localName = "getStatusMonitoringTransactionsResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetStatusMonitoringTransactionsResponse")
    public List<GetStatusMonitoringTransactionsItem> getStatusMonitoringTransactions(
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    Long contragentId)
            throws DataServiceFault_Exception
    ;

    /**
     * Аннулирование карты в системе IS-Card
     *
     * @param contragentId
     * @param cardId
     * @param cardsReleaseDate
     * @param disableOldAddCards
     * @return
     *     returns java.util.List<fasttack.ua.DisableOldCardItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:disableOldCard")
    @WebResult(name = "disableOldCardItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "disableOldCard", targetNamespace = "http://sab/", className = "fasttack.ua.DisableOldCard")
    @ResponseWrapper(localName = "disableOldCardResponse", targetNamespace = "http://sab/", className = "fasttack.ua.DisableOldCardResponse")
    public List<DisableOldCardItem> disableOldCard(
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    Integer contragentId,
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    Integer cardId,
            @WebParam(name = "disableOldAddCards", targetNamespace = "http://sab/")
                    Integer disableOldAddCards,
            @WebParam(name = "cardsReleaseDate", targetNamespace = "http://sab/")
                    XMLGregorianCalendar cardsReleaseDate)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Получение внешнего идентификатора клиента (T24ID) по идентификаторам карты
     *
     *
     * @param cardNum
     * @param cardGUID
     * @param cardID
     * @param hashNum
     * @return
     *     returns java.util.List<fasttack.ua.GetCustomerIDItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCustomerID")
    @WebResult(name = "getCustomerIDItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCustomerID", targetNamespace = "http://sab/", className = "fasttack.ua.GetCustomerID")
    @ResponseWrapper(localName = "getCustomerIDResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCustomerIDResponse")
    public List<GetCustomerIDItem> getCustomerID(
            @WebParam(name = "cardID", targetNamespace = "http://sab/")
                    String cardID,
            @WebParam(name = "cardNum", targetNamespace = "http://sab/")
                    String cardNum,
            @WebParam(name = "hashNum", targetNamespace = "http://sab/")
                    String hashNum,
            @WebParam(name = "cardGUID", targetNamespace = "http://sab/")
                    String cardGUID)
            throws DataServiceFault_Exception
    ;

    /**
     * НЕЛЬЗЯ ИСПОЛЬЗОВАТЬ!!! НАКАЗУЕМО!
     *
     * @param icCardId
     * @return
     *     returns java.util.List<fasttack.ua.CardInfo>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardInfoById")
    @WebResult(name = "cardInfo", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardInfoById", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardInfoById")
    @ResponseWrapper(localName = "cardInfoList", targetNamespace = "http://sab/", className = "fasttack.ua.CardInfoList")
    public List<CardInfo> getCardInfoById(
            @WebParam(name = "icCardId", targetNamespace = "http://sab/")
                    String icCardId)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Получение информации о карточном счете для передачи в Siebel
     *
     *
     * @param contragentId
     * @param dealNo
     * @return
     *     returns java.util.List<fasttack.ua.GetFinAccBySiebelItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getFinAccBySiebel")
    @WebResult(name = "getFinAccBySiebelItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getFinAccBySiebel", targetNamespace = "http://sab/", className = "fasttack.ua.GetFinAccBySiebel")
    @ResponseWrapper(localName = "getFinAccBySiebelResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetFinAccBySiebelResponse")
    public List<GetFinAccBySiebelItem> getFinAccBySiebel(
            @WebParam(name = "dealNo", targetNamespace = "http://sab/")
                    String dealNo,
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    String contragentId)
            throws DataServiceFault_Exception
    ;

    /**
     * get product types by project id
     *
     * @param attributeCode
     * @return
     *     returns java.util.List<fasttack.ua.GetSubproductCodesByAtrributeItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getSubproductCodesByAtrribute")
    @WebResult(name = "getSubproductCodesByAtrributeItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getSubproductCodesByAtrribute", targetNamespace = "http://sab/", className = "fasttack.ua.GetSubproductCodesByAtrribute")
    @ResponseWrapper(localName = "getSubproductCodesByAtrributeResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetSubproductCodesByAtrributeResponse")
    public List<GetSubproductCodesByAtrributeItem> getSubproductCodesByAtrribute(
            @WebParam(name = "attributeCode", targetNamespace = "http://sab/")
                    String attributeCode)
            throws DataServiceFault_Exception
    ;

    /**
     * Получение нового субпродукта по карте
     *
     * @param contragentId
     * @param cardId
     * @return
     *     returns java.util.List<fasttack.ua.GetNewSubproductItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getNewSubproduct")
    @WebResult(name = "getNewSubproductItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getNewSubproduct", targetNamespace = "http://sab/", className = "fasttack.ua.GetNewSubproduct")
    @ResponseWrapper(localName = "getNewSubproductResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetNewSubproductResponse")
    public List<GetNewSubproductItem> getNewSubproduct(
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    Integer contragentId,
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    Integer cardId)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Процедура проверки возможности совершения перевода для клиента в Is-Card
     *
     *
     * @param phoneNumber
     * @param messageId
     * @param cardHashNumber
     * @param currency
     * @return
     *     returns java.util.List<fasttack.ua.CheckTransferItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:checkTransfer")
    @WebResult(name = "checkTransferItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "checkTransfer", targetNamespace = "http://sab/", className = "fasttack.ua.CheckTransfer")
    @ResponseWrapper(localName = "checkTransferResponse", targetNamespace = "http://sab/", className = "fasttack.ua.CheckTransferResponse")
    public List<CheckTransferItem> checkTransfer(
            @WebParam(name = "messageId", targetNamespace = "http://sab/")
                    String messageId,
            @WebParam(name = "cardHashNumber", targetNamespace = "http://sab/")
                    String cardHashNumber,
            @WebParam(name = "currency", targetNamespace = "http://sab/")
                    String currency,
            @WebParam(name = "phoneNumber", targetNamespace = "http://sab/")
                    String phoneNumber)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Выполнение частичного или полного погашения кредитной задолженности по сделке Installment в системе IS-Card
     *
     *
     * @param process
     * @param amount
     * @param system
     * @param installmentId
     * @param user
     * @return
     *     returns java.util.List<fasttack.ua.RepaymentInstallmentItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:repaymentInstallment")
    @WebResult(name = "repaymentInstallmentItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "repaymentInstallment", targetNamespace = "http://sab/", className = "fasttack.ua.RepaymentInstallment")
    @ResponseWrapper(localName = "repaymentInstallmentResponse", targetNamespace = "http://sab/", className = "fasttack.ua.RepaymentInstallmentResponse")
    public List<RepaymentInstallmentItem> repaymentInstallment(
            @WebParam(name = "system", targetNamespace = "http://sab/")
                    String system,
            @WebParam(name = "process", targetNamespace = "http://sab/")
                    String process,
            @WebParam(name = "user", targetNamespace = "http://sab/")
                    String user,
            @WebParam(name = "installmentId", targetNamespace = "http://sab/")
                    Long installmentId,
            @WebParam(name = "amount", targetNamespace = "http://sab/")
                    Long amount)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Результатом является флаг-значение 0 или 1, показывающее возможность включения или отключения проверки CVV2 по карте.
     *
     *
     * @param cardId
     * @param cardHashNumber
     * @return
     *     returns java.util.List<fasttack.ua.GetCVV2FlagItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCVV2Flag")
    @WebResult(name = "getCVV2FlagItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCVV2Flag", targetNamespace = "http://sab/", className = "fasttack.ua.GetCVV2Flag")
    @ResponseWrapper(localName = "getCVV2FlagResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCVV2FlagResponse")
    public List<GetCVV2FlagItem> getCVV2Flag(
            @WebParam(name = "cardHashNumber", targetNamespace = "http://sab/")
                    String cardHashNumber,
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    Long cardId)
            throws DataServiceFault_Exception
    ;

    /**
     * Проверить допустимость смены пина на карте
     *
     * @param userLogin
     * @param cardId
     * @return
     *     returns java.util.List<fasttack.ua.CheckPinChangeItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:checkPinChange")
    @WebResult(name = "checkPinChangeItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "checkPinChange", targetNamespace = "http://sab/", className = "fasttack.ua.CheckPinChange")
    @ResponseWrapper(localName = "checkPinChangeResponse", targetNamespace = "http://sab/", className = "fasttack.ua.CheckPinChangeResponse")
    public List<CheckPinChangeItem> checkPinChange(
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    Integer cardId,
            @WebParam(name = "userLogin", targetNamespace = "http://sab/")
                    String userLogin)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Функция setCardDeliveryStatus устанавливает статус заявки.
     *
     *
     * @param persFileDate
     * @param batchfilename
     * @param requestnum
     * @param fileGenName
     * @param netreceiveddate
     * @param dealid
     * @param commentinfo
     * @param barCode
     * @param manufacturer
     * @param userLogin
     * @param solution
     * @param courier
     * @param trackStatus
     * @param cardHashNumber
     * @param trackStatusAdd1
     * @param trackStatusAdd2
     * @return
     *     returns java.util.List<fasttack.ua.SetCardDeliveryStatusItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:setCardDeliveryStatus")
    @WebResult(name = "setCardDeliveryStatusItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "setCardDeliveryStatus", targetNamespace = "http://sab/", className = "fasttack.ua.SetCardDeliveryStatus")
    @ResponseWrapper(localName = "setCardDeliveryStatusResponse", targetNamespace = "http://sab/", className = "fasttack.ua.SetCardDeliveryStatusResponse")
    public List<SetCardDeliveryStatusItem> setCardDeliveryStatus(
            @WebParam(name = "cardHashNumber", targetNamespace = "http://sab/")
                    String cardHashNumber,
            @WebParam(name = "barCode", targetNamespace = "http://sab/")
                    String barCode,
            @WebParam(name = "trackStatus", targetNamespace = "http://sab/")
                    String trackStatus,
            @WebParam(name = "trackStatusAdd1", targetNamespace = "http://sab/")
                    String trackStatusAdd1,
            @WebParam(name = "trackStatusAdd2", targetNamespace = "http://sab/")
                    String trackStatusAdd2,
            @WebParam(name = "manufacturer", targetNamespace = "http://sab/")
                    String manufacturer,
            @WebParam(name = "userLogin", targetNamespace = "http://sab/")
                    String userLogin,
            @WebParam(name = "fileGenName", targetNamespace = "http://sab/")
                    String fileGenName,
            @WebParam(name = "persFileDate", targetNamespace = "http://sab/")
                    XMLGregorianCalendar persFileDate,
            @WebParam(name = "requestnum", targetNamespace = "http://sab/")
                    String requestnum,
            @WebParam(name = "batchfilename", targetNamespace = "http://sab/")
                    String batchfilename,
            @WebParam(name = "netreceiveddate", targetNamespace = "http://sab/")
                    XMLGregorianCalendar netreceiveddate,
            @WebParam(name = "courier", targetNamespace = "http://sab/")
                    String courier,
            @WebParam(name = "dealid", targetNamespace = "http://sab/")
                    String dealid,
            @WebParam(name = "commentinfo", targetNamespace = "http://sab/")
                    String commentinfo,
            @WebParam(name = "solution", targetNamespace = "http://sab/")
                    String solution)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Получение кредитовых оборотов по зарплатным карточным договорам клиентов в разрезе клиентов. Если среднее значение кредитового оборота равняется 0, то данные не возвращаются. Количество расчетных периодов за которые проводится расчет регулируется константой в пакете PKG_EODTASK.cDefTurnPeriod (Установлено 3). USE: Siebel
     *
     *
     * @param contragentId
     * @return
     *     returns java.util.List<fasttack.ua.GetSalaryCreditTurnoverItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getSalaryCreditTurnover")
    @WebResult(name = "getSalaryCreditTurnoverItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getSalaryCreditTurnover", targetNamespace = "http://sab/", className = "fasttack.ua.GetSalaryCreditTurnover")
    @ResponseWrapper(localName = "getSalaryCreditTurnoverResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetSalaryCreditTurnoverResponse")
    public List<GetSalaryCreditTurnoverItem> getSalaryCreditTurnover(
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    String contragentId)
            throws DataServiceFault_Exception
    ;

    /**
     * Получение нового текущего субпродукта по карте
     *
     * @param cardId
     * @return
     *     returns java.util.List<fasttack.ua.GetCurrentNewSubproductItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCurrentNewSubproduct")
    @WebResult(name = "getCurrentNewSubproductItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCurrentNewSubproduct", targetNamespace = "http://sab/", className = "fasttack.ua.GetCurrentNewSubproduct")
    @ResponseWrapper(localName = "getCurrentNewSubproductResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCurrentNewSubproductResponse")
    public List<GetCurrentNewSubproductItem> getCurrentNewSubproduct(
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    Integer cardId)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Получение доступных остатков по бизнес-карте. ТОЛЬКО ДЛЯ ВНУТРЕННЕГО ИСПОЛЬЗОВАНИЯ ESB! Mandatory fields: accountNumber, currencyCode, cardHashNumber
     *
     *
     * @param cardHashNumber
     * @param accountNumber
     * @param currencyCode
     * @return
     *     returns java.util.List<fasttack.ua.GetCardAccountBalanceItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardAccountBalance")
    @WebResult(name = "getCardAccountBalanceItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardAccountBalance", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardAccountBalance")
    @ResponseWrapper(localName = "getCardAccountBalanceResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardAccountBalanceResponse")
    public List<GetCardAccountBalanceItem> getCardAccountBalance(
            @WebParam(name = "accountNumber", targetNamespace = "http://sab/")
                    String accountNumber,
            @WebParam(name = "currencyCode", targetNamespace = "http://sab/")
                    String currencyCode,
            @WebParam(name = "cardHashNumber", targetNamespace = "http://sab/")
                    String cardHashNumber)
            throws DataServiceFault_Exception
    ;

    /**
     * update card deal credit limit. USE: CFront
     *
     * @param newCreditLimit
     * @param endDate
     * @param dealId
     * @param accountNo
     * @param noSMS
     * @param startDate
     * @return
     *     returns java.util.List<fasttack.ua.CreditLimit>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:setCardDealCreditLimit")
    @WebResult(name = "creditLimit", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "setCardDealCreditLimit", targetNamespace = "http://sab/", className = "fasttack.ua.SetCardDealCreditLimit")
    @ResponseWrapper(localName = "setCardContractCreditLimitResponse", targetNamespace = "http://sab/", className = "fasttack.ua.SetCardContractCreditLimitResponse")
    public List<CreditLimit> setCardDealCreditLimit(
            @WebParam(name = "dealId", targetNamespace = "http://sab/")
                    String dealId,
            @WebParam(name = "accountNo", targetNamespace = "http://sab/")
                    String accountNo,
            @WebParam(name = "newCreditLimit", targetNamespace = "http://sab/")
                    Long newCreditLimit,
            @WebParam(name = "startDate", targetNamespace = "http://sab/")
                    XMLGregorianCalendar startDate,
            @WebParam(name = "endDate", targetNamespace = "http://sab/")
                    XMLGregorianCalendar endDate,
            @WebParam(name = "noSMS", targetNamespace = "http://sab/")
                    Integer noSMS)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Интерфейс для получения атрибутов субпродукта платежной карты
     *
     *
     * @param kService
     * @param subProductCode
     * @param split
     * @param premium
     * @param subProductGroup
     * @param subProductName
     * @param loyaltyCode
     * @param finRiskInsurance
     * @param actualProduct
     * @param accidentInsurance
     * @param voyage
     * @return
     *     returns java.util.List<fasttack.ua.GetSubproductAttributesItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getSubproductAttributes")
    @WebResult(name = "getSubproductAttributesItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getSubproductAttributes", targetNamespace = "http://sab/", className = "fasttack.ua.GetSubproductAttributes")
    @ResponseWrapper(localName = "getSubproductAttributesResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetSubproductAttributesResponse")
    public List<GetSubproductAttributesItem> getSubproductAttributes(
            @WebParam(name = "subProductCode", targetNamespace = "http://sab/")
                    String subProductCode,
            @WebParam(name = "subProductName", targetNamespace = "http://sab/")
                    String subProductName,
            @WebParam(name = "subProductGroup", targetNamespace = "http://sab/")
                    Integer subProductGroup,
            @WebParam(name = "actualProduct", targetNamespace = "http://sab/")
                    Integer actualProduct,
            @WebParam(name = "split", targetNamespace = "http://sab/")
                    Integer split,
            @WebParam(name = "premium", targetNamespace = "http://sab/")
                    Integer premium,
            @WebParam(name = "loyaltyCode", targetNamespace = "http://sab/")
                    Integer loyaltyCode,
            @WebParam(name = "accidentInsurance", targetNamespace = "http://sab/")
                    Integer accidentInsurance,
            @WebParam(name = "voyage", targetNamespace = "http://sab/")
                    Integer voyage,
            @WebParam(name = "finRiskInsurance", targetNamespace = "http://sab/")
                    Integer finRiskInsurance,
            @WebParam(name = "kService", targetNamespace = "http://sab/")
                    String kService)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * метод для получения финансовой информации по карточной сделке accountList - информация о дополнительных счетах 2624, 2625, 8030
     *
     *
     * @param dealId
     * @param showAccount8030
     * @return
     *     returns java.util.List<fasttack.ua.CardDealState>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardDealState")
    @WebResult(name = "cardDealState", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardDealState", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDealState")
    @ResponseWrapper(localName = "getCardDealStateResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDealStateResponse")
    public List<CardDealState> getCardDealState(
            @WebParam(name = "dealId", targetNamespace = "http://sab/")
                    String dealId,
            @WebParam(name = "showAccount8030", targetNamespace = "http://sab/")
                    Integer showAccount8030)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Перепривязка договора к реальному контрагенту в БД IS-Card ClientRebinding
     *
     *
     * @param cardId
     * @param dealNo
     * @return
     *     returns java.util.List<fasttack.ua.AddCardRebindingItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:addCardRebinding")
    @WebResult(name = "addCardRebindingItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "addCardRebinding", targetNamespace = "http://sab/", className = "fasttack.ua.AddCardRebinding")
    @ResponseWrapper(localName = "addCardRebindingResponse", targetNamespace = "http://sab/", className = "fasttack.ua.AddCardRebindingResponse")
    public List<AddCardRebindingItem> addCardRebinding(
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    Integer cardId,
            @WebParam(name = "dealNo", targetNamespace = "http://sab/")
                    String dealNo)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * get card contracts by client t24 id. cardStatusId: 2-Аннулированная,1-Приостановленная,0-Активная. dealTypeId: 0-Частный,1-Корпоративный.
     *
     *
     * @param contragentId
     * @return
     *     returns java.util.List<fasttack.ua.CardDeal6>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardDealsByContragentId")
    @WebResult(name = "cardDeal", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardDealsByContragentId", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDealsByContragentId")
    @ResponseWrapper(localName = "getCardDealsByContragentIdResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDealsByContragentIdResponse")
    public List<CardDeal6> getCardDealsByContragentId(
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    String contragentId)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Получение дополнительной информации о карте и клиенте в рамках процесса Installment
     *
     *
     * @param adviceId
     * @return
     *     returns java.util.List<fasttack.ua.GetAdditionalInstallmentInfoItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getAdditionalInstallmentInfo")
    @WebResult(name = "getAdditionalInstallmentInfoItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getAdditionalInstallmentInfo", targetNamespace = "http://sab/", className = "fasttack.ua.GetAdditionalInstallmentInfo")
    @ResponseWrapper(localName = "getAdditionalInstallmentInfoResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetAdditionalInstallmentInfoResponse")
    public List<GetAdditionalInstallmentInfoItem> getAdditionalInstallmentInfo(
            @WebParam(name = "adviceId", targetNamespace = "http://sab/")
                    Integer adviceId)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Установка значения кода лояльности на карте в БД IS-Card
     *
     *
     * @param cardId
     * @param barCode
     * @return
     *     returns java.util.List<fasttack.ua.SetBarCodeItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:setBarCode")
    @WebResult(name = "setBarCodeItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "setBarCode", targetNamespace = "http://sab/", className = "fasttack.ua.SetBarCode")
    @ResponseWrapper(localName = "setBarCodeResponse", targetNamespace = "http://sab/", className = "fasttack.ua.SetBarCodeResponse")
    public List<SetBarCodeItem> setBarCode(
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    Integer cardId,
            @WebParam(name = "barCode", targetNamespace = "http://sab/")
                    String barCode)
            throws DataServiceFault_Exception
    ;

    /**
     * Установка значения субпродукта на карте
     *
     * @param cardId
     * @param subproductCode
     * @return
     *     returns java.util.List<fasttack.ua.SetNewSubproductByCardItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:setNewSubproductByCard")
    @WebResult(name = "setNewSubproductByCardItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "setNewSubproductByCard", targetNamespace = "http://sab/", className = "fasttack.ua.SetNewSubproductByCard")
    @ResponseWrapper(localName = "setNewSubproductByCardResponse", targetNamespace = "http://sab/", className = "fasttack.ua.SetNewSubproductByCardResponse")
    public List<SetNewSubproductByCardItem> setNewSubproductByCard(
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    Integer cardId,
            @WebParam(name = "subproductCode", targetNamespace = "http://sab/")
                    String subproductCode)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Получение перечня возможных дополнительных карт для основной карты клиента
     *
     *
     * @param cardId
     * @param cardHashNumber
     * @return
     *     returns java.util.List<fasttack.ua.GetAvailableAddCardItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getAvailableAddCard")
    @WebResult(name = "getAvailableAddCardItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getAvailableAddCard", targetNamespace = "http://sab/", className = "fasttack.ua.GetAvailableAddCard")
    @ResponseWrapper(localName = "getAvailableAddCardResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetAvailableAddCardResponse")
    public List<GetAvailableAddCardItem> getAvailableAddCard(
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    String cardId,
            @WebParam(name = "cardHashNumber", targetNamespace = "http://sab/")
                    String cardHashNumber)
            throws DataServiceFault_Exception
    ;

    /**
     * Получение ставки по доходному сейфу
     *
     * @param iContractId
     * @param iPerccondId
     * @param iPercfeeClassId
     * @return
     *     returns java.util.List<fasttack.ua.GetRateYieldSafeItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getRateYieldSafe")
    @WebResult(name = "getRateYieldSafeItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getRateYieldSafe", targetNamespace = "http://sab/", className = "fasttack.ua.GetRateYieldSafe")
    @ResponseWrapper(localName = "getRateYieldSafeResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetRateYieldSafeResponse")
    public List<GetRateYieldSafeItem> getRateYieldSafe(
            @WebParam(name = "iContractId", targetNamespace = "http://sab/")
                    String iContractId,
            @WebParam(name = "iPerccondId", targetNamespace = "http://sab/")
                    String iPerccondId,
            @WebParam(name = "iPercfeeClassId", targetNamespace = "http://sab/")
                    String iPercfeeClassId)
            throws DataServiceFault_Exception
    ;

    /**
     * Deprecated
     *
     * @param cardId
     * @return
     *     returns java.util.List<fasttack.ua.ActivateCardByIdItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:activateCardById")
    @WebResult(name = "activateCardByIdItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "activateCardById", targetNamespace = "http://sab/", className = "fasttack.ua.ActivateCardById")
    @ResponseWrapper(localName = "activateCardByIdResponse", targetNamespace = "http://sab/", className = "fasttack.ua.ActivateCardByIdResponse")
    public List<ActivateCardByIdItem> activateCardById(
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    Integer cardId)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Справочник будет хардкодным, т.е. не будет брать значения из каких-либо систем
     *
     *
     * @return
     *     returns java.util.List<fasttack.ua.GetCardManufacturersItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardManufacturers")
    @WebResult(name = "getCardManufacturersItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardManufacturers", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardManufacturers")
    @ResponseWrapper(localName = "getCardManufacturersResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardManufacturersResponse")
    public List<GetCardManufacturersItem> getCardManufacturers()
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Досрочное погашение задолженности (частичное или полное) по рассрочке (Installment)
     *
     *
     * @param amount
     * @param installmentId
     * @return
     *     returns java.util.List<fasttack.ua.SetInstallmentRepaymentItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:setInstallmentRepayment")
    @WebResult(name = "setInstallmentRepaymentItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "setInstallmentRepayment", targetNamespace = "http://sab/", className = "fasttack.ua.SetInstallmentRepayment")
    @ResponseWrapper(localName = "setInstallmentRepaymentResponse", targetNamespace = "http://sab/", className = "fasttack.ua.SetInstallmentRepaymentResponse")
    public List<SetInstallmentRepaymentItem> setInstallmentRepayment(
            @WebParam(name = "installmentId", targetNamespace = "http://sab/")
                    Integer installmentId,
            @WebParam(name = "amount", targetNamespace = "http://sab/")
                    Integer amount)
            throws DataServiceFault_Exception
    ;

    /**
     * Получение списка карт для перевыпуска
     *
     * @param rowCount
     * @return
     *     returns java.util.List<fasttack.ua.GetReIssueCardsItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getReIssueCards")
    @WebResult(name = "getReIssueCardsItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getReIssueCards", targetNamespace = "http://sab/", className = "fasttack.ua.GetReIssueCards")
    @ResponseWrapper(localName = "getReIssueCardsResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetReIssueCardsResponse")
    public List<GetReIssueCardsItem> getReIssueCards(
            @WebParam(name = "rowCount", targetNamespace = "http://sab/")
                    String rowCount)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Перевод карточного договора в режим "только гашение"
     *
     *
     * @param upSell
     * @param dealId
     * @param expireDate
     * @return
     *     returns java.util.List<fasttack.ua.SetUpSellNotReissuingItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:setUpSellNotReissuing")
    @WebResult(name = "setUpSellNotReissuingItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "setUpSellNotReissuing", targetNamespace = "http://sab/", className = "fasttack.ua.SetUpSellNotReissuing")
    @ResponseWrapper(localName = "setUpSellNotReissuingResponse", targetNamespace = "http://sab/", className = "fasttack.ua.SetUpSellNotReissuingResponse")
    public List<SetUpSellNotReissuingItem> setUpSellNotReissuing(
            @WebParam(name = "dealId", targetNamespace = "http://sab/")
                    Integer dealId,
            @WebParam(name = "upSell", targetNamespace = "http://sab/")
                    Integer upSell,
            @WebParam(name = "expireDate", targetNamespace = "http://sab/")
                    XMLGregorianCalendar expireDate)
            throws DataServiceFault_Exception
    ;

    /**
     * Получение тела готовой выписки
     *
     * @param statementFrom
     * @param contractId
     * @param statementTo
     * @param templateId
     * @param taskId
     * @return
     *     returns java.util.List<fasttack.ua.GetStatementItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getStatement")
    @WebResult(name = "getStatementItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getStatement", targetNamespace = "http://sab/", className = "fasttack.ua.GetStatement")
    @ResponseWrapper(localName = "getStatementResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetStatementResponse")
    public List<GetStatementItem> getStatement(
            @WebParam(name = "taskId", targetNamespace = "http://sab/")
                    Integer taskId,
            @WebParam(name = "contractId", targetNamespace = "http://sab/")
                    Integer contractId,
            @WebParam(name = "templateId", targetNamespace = "http://sab/")
                    Integer templateId,
            @WebParam(name = "statementFrom", targetNamespace = "http://sab/")
                    XMLGregorianCalendar statementFrom,
            @WebParam(name = "statementTo", targetNamespace = "http://sab/")
                    XMLGregorianCalendar statementTo)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * get card contract by card number. USE: T24. cardStatusId: 2-Аннулированная,1-Приостановленная,0-Активная. dealTypeId: 0-Частный,1-Корпоративный.
     *
     *
     * @param cardId
     * @param cardNumber
     * @param barCode
     * @return
     *     returns java.util.List<fasttack.ua.CardDeal5>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardDealByCardNumber")
    @WebResult(name = "cardDeal", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardDealByCardNumber", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDealByCardNumber")
    @ResponseWrapper(localName = "getCardDealByCardNumberResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDealByCardNumberResponse")
    public List<CardDeal5> getCardDealByCardNumber(
            @WebParam(name = "cardNumber", targetNamespace = "http://sab/")
                    String cardNumber,
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    String cardId,
            @WebParam(name = "barCode", targetNamespace = "http://sab/")
                    String barCode)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Устанавливает статус счета в состояние "заморожен". Не происходит изменение статуса если: 1. установлен разрешенные перерасхода больше 0; 2. входящее значение номера карточного счета не заполнено; 3. номер карточного счета не найден в таблице карточных счетов; 4. статус счета отличается от активного
     *
     *
     * @param accountNo
     * @return
     *     returns java.util.List<fasttack.ua.FreezeCardAccountItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:freezeCardAccount")
    @WebResult(name = "freezeCardAccountItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "freezeCardAccount", targetNamespace = "http://sab/", className = "fasttack.ua.FreezeCardAccount")
    @ResponseWrapper(localName = "freezeCardAccountResponse", targetNamespace = "http://sab/", className = "fasttack.ua.FreezeCardAccountResponse")
    public List<FreezeCardAccountItem> freezeCardAccount(
            @WebParam(name = "accountNo", targetNamespace = "http://sab/")
                    String accountNo)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Поиск карт ФОП в IS-Card. ТОЛЬКО ДЛЯ ВНУТРЕННЕГО ИСПОЛЬЗОВАНИЯ ESB! Mandatory fields: card4Last, contragentId
     *
     *
     * @param cardBin
     * @param contragentId
     * @param card4Last
     * @return
     *     returns java.util.List<fasttack.ua.GetCardDealJurItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardDealJur")
    @WebResult(name = "getCardDealJurItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardDealJur", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDealJur")
    @ResponseWrapper(localName = "getCardDealJurResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDealJurResponse")
    public List<GetCardDealJurItem> getCardDealJur(
            @WebParam(name = "card4Last", targetNamespace = "http://sab/")
                    String card4Last,
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    String contragentId,
            @WebParam(name = "cardBin", targetNamespace = "http://sab/")
                    String cardBin)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Интерфейс аннулирования карты по зарплатно-карточному проекту. Проверки : Счет 2625% в статусе Активен ACCSTATUSID=0. Карта в статусе Активная CARDSTATUSID=0. Карта находится в бизнес стоп-листе с кодом BSNSTOPCODE =WaitToAccept SYSDATE- ACCSTATUSDATE>180
     *
     *
     * @param cancelType
     * @param cardId
     * @param cardHashNum
     * @return
     *     returns java.util.List<fasttack.ua.AnnulateSalaryCardItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:annulateSalaryCard")
    @WebResult(name = "annulateSalaryCardItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "annulateSalaryCard", targetNamespace = "http://sab/", className = "fasttack.ua.AnnulateSalaryCard")
    @ResponseWrapper(localName = "annulateSalaryCardResponse", targetNamespace = "http://sab/", className = "fasttack.ua.AnnulateSalaryCardResponse")
    public List<AnnulateSalaryCardItem> annulateSalaryCard(
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    Integer cardId,
            @WebParam(name = "cardHashNum", targetNamespace = "http://sab/")
                    String cardHashNum,
            @WebParam(name = "cancelType", targetNamespace = "http://sab/")
                    Integer cancelType)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Проверка возможности активации карты и её активация
     *
     *
     * @param cardId
     * @return
     *     returns java.util.List<fasttack.ua.CheckCardActivationItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:checkCardActivation")
    @WebResult(name = "checkCardActivationItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "checkCardActivation", targetNamespace = "http://sab/", className = "fasttack.ua.CheckCardActivation")
    @ResponseWrapper(localName = "checkCardActivationResponse", targetNamespace = "http://sab/", className = "fasttack.ua.CheckCardActivationResponse")
    public List<CheckCardActivationItem> checkCardActivation(
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    Integer cardId)
            throws DataServiceFault_Exception
    ;

    /**
     * Получение краткой информации по карте
     *
     * @param pan
     * @return
     *     returns java.util.List<fasttack.ua.GetCardInfoShortItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardInfoShort")
    @WebResult(name = "getCardInfoShortItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardInfoShort", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardInfoShort")
    @ResponseWrapper(localName = "getCardInfoShortResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardInfoShortResponse")
    public List<GetCardInfoShortItem> getCardInfoShort(
            @WebParam(name = "pan", targetNamespace = "http://sab/")
                    String pan)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Получения истории авторизаций, используя Advice Notification.
     *
     *
     * @param endDate
     * @param cardId
     * @param cardHashNum
     * @param startDate
     * @return
     *     returns java.util.List<fasttack.ua.GetTransactionHistoryItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getTransactionHistory")
    @WebResult(name = "getTransactionHistoryItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getTransactionHistory", targetNamespace = "http://sab/", className = "fasttack.ua.GetTransactionHistory")
    @ResponseWrapper(localName = "getTransactionHistoryResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetTransactionHistoryResponse")
    public List<GetTransactionHistoryItem> getTransactionHistory(
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    String cardId,
            @WebParam(name = "cardHashNum", targetNamespace = "http://sab/")
                    String cardHashNum,
            @WebParam(name = "startDate", targetNamespace = "http://sab/")
                    XMLGregorianCalendar startDate,
            @WebParam(name = "endDate", targetNamespace = "http://sab/")
                    XMLGregorianCalendar endDate)
            throws DataServiceFault_Exception
    ;

    /**
     * Перевыпуск карты
     *
     * @param branchCode
     * @param typeOfTerm
     * @param cardName
     * @param contragentId
     * @param cardId
     * @param messageId
     * @param flagCommission
     * @param templateID
     * @param newSubproductCode
     * @return
     *     returns java.util.List<fasttack.ua.ReissueCardWithNewSubproductCodeItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:reissueCardWithNewSubproductCode")
    @WebResult(name = "reissueCardWithNewSubproductCodeItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "reissueCardWithNewSubproductCode", targetNamespace = "http://sab/", className = "fasttack.ua.ReissueCardWithNewSubproductCode")
    @ResponseWrapper(localName = "reissueCardWithNewSubproductCodeResponse", targetNamespace = "http://sab/", className = "fasttack.ua.ReissueCardWithNewSubproductCodeResponse")
    public List<ReissueCardWithNewSubproductCodeItem> reissueCardWithNewSubproductCode(
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    Integer contragentId,
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    Integer cardId,
            @WebParam(name = "newSubproductCode", targetNamespace = "http://sab/")
                    String newSubproductCode,
            @WebParam(name = "typeOfTerm", targetNamespace = "http://sab/")
                    Integer typeOfTerm,
            @WebParam(name = "messageId", targetNamespace = "http://sab/")
                    String messageId,
            @WebParam(name = "flagCommission", targetNamespace = "http://sab/")
                    Integer flagCommission,
            @WebParam(name = "cardName", targetNamespace = "http://sab/")
                    String cardName,
            @WebParam(name = "templateID", targetNamespace = "http://sab/")
                    String templateID,
            @WebParam(name = "branchCode", targetNamespace = "http://sab/")
                    String branchCode)
            throws DataServiceFault_Exception
    ;

    /**
     * Проверка кодового слова
     *
     * @param codeWord
     * @param cardId
     * @param cardHashNumber
     * @return
     *     returns java.util.List<fasttack.ua.CheckCodeWordItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:checkCodeWord")
    @WebResult(name = "checkCodeWordItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "checkCodeWord", targetNamespace = "http://sab/", className = "fasttack.ua.CheckCodeWord")
    @ResponseWrapper(localName = "checkCodeWordResponse", targetNamespace = "http://sab/", className = "fasttack.ua.CheckCodeWordResponse")
    public List<CheckCodeWordItem> checkCodeWord(
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    Integer cardId,
            @WebParam(name = "cardHashNumber", targetNamespace = "http://sab/")
                    String cardHashNumber,
            @WebParam(name = "codeWord", targetNamespace = "http://sab/")
                    String codeWord)
            throws DataServiceFault_Exception
    ;

    /**
     * Проверить, подключен ли пакет Альфа-Выбор
     *
     * @param cardHashNumber
     * @return
     *     returns java.util.List<fasttack.ua.CheckAlfaChoiseEnableItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:checkAlfaChoiseEnable")
    @WebResult(name = "checkAlfaChoiseEnableItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "checkAlfaChoiseEnable", targetNamespace = "http://sab/", className = "fasttack.ua.CheckAlfaChoiseEnable")
    @ResponseWrapper(localName = "checkAlfaChoiseEnableResponse", targetNamespace = "http://sab/", className = "fasttack.ua.CheckAlfaChoiseEnableResponse")
    public List<CheckAlfaChoiseEnableItem> checkAlfaChoiseEnable(
            @WebParam(name = "cardHashNumber", targetNamespace = "http://sab/")
                    String cardHashNumber)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * технический метод. получение кода отделения для доставки карты с завода. используется в логистике.
     *
     *
     * @param cardHashNumber
     * @return
     *     returns java.util.List<fasttack.ua.GetCardDeliveryBranchItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardDeliveryBranch")
    @WebResult(name = "getCardDeliveryBranchItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardDeliveryBranch", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDeliveryBranch")
    @ResponseWrapper(localName = "getCardDeliveryBranchResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDeliveryBranchResponse")
    public List<GetCardDeliveryBranchItem> getCardDeliveryBranch(
            @WebParam(name = "cardHashNumber", targetNamespace = "http://sab/")
                    String cardHashNumber)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * method to get CardTemplate by cardTypeText and/or projectId and/or projectText and/or taxId. Source: таблица agrpartpl. USE: cfront.
     *
     *
     * @param cardTypeText
     * @param gender
     * @param taxId
     * @param cardTypeCode
     * @param projectText
     * @param projectId
     * @return
     *     returns java.util.List<fasttack.ua.GetCardTemplateItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardTemplate")
    @WebResult(name = "getCardTemplateItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardTemplate", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardTemplate")
    @ResponseWrapper(localName = "getCardTemplateResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardTemplateResponse")
    public List<GetCardTemplateItem> getCardTemplate(
            @WebParam(name = "cardTypeText", targetNamespace = "http://sab/")
                    String cardTypeText,
            @WebParam(name = "cardTypeCode", targetNamespace = "http://sab/")
                    String cardTypeCode,
            @WebParam(name = "projectId", targetNamespace = "http://sab/")
                    String projectId,
            @WebParam(name = "projectText", targetNamespace = "http://sab/")
                    String projectText,
            @WebParam(name = "taxId", targetNamespace = "http://sab/")
                    String taxId,
            @WebParam(name = "gender", targetNamespace = "http://sab/")
                    String gender)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Получения статуса доставки карты по введенному тексту. На данный момент в тексте принимаются только баркоды либо хеш номера карт.
     *
     *
     * @param searchText
     * @param plantDeliveryPoint
     * @param cardDeliveryStatus
     * @param shopId
     * @return
     *     returns java.util.List<fasttack.ua.GetCardDeliveryStatusByTextItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardDeliveryStatusByText")
    @WebResult(name = "getCardDeliveryStatusByTextItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardDeliveryStatusByText", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDeliveryStatusByText")
    @ResponseWrapper(localName = "getCardDeliveryStatusByTextResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDeliveryStatusByTextResponse")
    public List<GetCardDeliveryStatusByTextItem> getCardDeliveryStatusByText(
            @WebParam(name = "searchText", targetNamespace = "http://sab/")
                    String searchText,
            @WebParam(name = "cardDeliveryStatus", targetNamespace = "http://sab/")
                    String cardDeliveryStatus,
            @WebParam(name = "plantDeliveryPoint", targetNamespace = "http://sab/")
                    String plantDeliveryPoint,
            @WebParam(name = "shopId", targetNamespace = "http://sab/")
                    String shopId)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Изменение статуса услуги «Мониторинг неуспешных операций» по клиенту и по необходимым картам. Mandatory fields: contragentId
     *
     *
     * @param process
     * @param system
     * @param contragentId
     * @param statusContragent
     * @param cardIdList
     * @param user
     * @return
     *     returns java.util.List<fasttack.ua.ChangeStatusMonitoringTransactionsItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:changeStatusMonitoringTransactions")
    @WebResult(name = "changeStatusMonitoringTransactionsItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "changeStatusMonitoringTransactions", targetNamespace = "http://sab/", className = "fasttack.ua.ChangeStatusMonitoringTransactions")
    @ResponseWrapper(localName = "changeStatusMonitoringTransactionsResponse", targetNamespace = "http://sab/", className = "fasttack.ua.ChangeStatusMonitoringTransactionsResponse")
    public List<ChangeStatusMonitoringTransactionsItem> changeStatusMonitoringTransactions(
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    Long contragentId,
            @WebParam(name = "statusContragent", targetNamespace = "http://sab/")
                    Long statusContragent,
            @WebParam(name = "cardIdList", targetNamespace = "http://sab/")
                    String cardIdList,
            @WebParam(name = "system", targetNamespace = "http://sab/")
                    String system,
            @WebParam(name = "process", targetNamespace = "http://sab/")
                    String process,
            @WebParam(name = "user", targetNamespace = "http://sab/")
                    String user)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Процедура проставления флага принятия файла DB в Is-Card
     *
     *
     * @param dbFileName
     * @param startLoad
     * @param endLoad
     * @return
     *     returns java.util.List<fasttack.ua.UpdateDBFileFlagItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:updateDBFileFlag")
    @WebResult(name = "updateDBFileFlagItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "updateDBFileFlag", targetNamespace = "http://sab/", className = "fasttack.ua.UpdateDBFileFlag")
    @ResponseWrapper(localName = "updateDBFileFlagResponse", targetNamespace = "http://sab/", className = "fasttack.ua.UpdateDBFileFlagResponse")
    public List<UpdateDBFileFlagItem> updateDBFileFlag(
            @WebParam(name = "dbFileName", targetNamespace = "http://sab/")
                    String dbFileName,
            @WebParam(name = "startLoad", targetNamespace = "http://sab/")
                    XMLGregorianCalendar startLoad,
            @WebParam(name = "endLoad", targetNamespace = "http://sab/")
                    XMLGregorianCalendar endLoad)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Оформление дополнительной карты клиенту.Mandatory fields: cardHashNumber, firstNameLatin, lastNameLatin, codeWord, prefixId, authRangeId, codeCardId, riskClassId
     *
     *
     * @param lastNameLatin
     * @param codeWord
     * @param codeCardId
     * @param additionalInfo
     * @param authRangeId
     * @param riskClassId
     * @param cardHashNumber
     * @param chargeRenewFee
     * @param cardOwnerFullName
     * @param firstNameLatin
     * @param prefixId
     * @return
     *     returns java.util.List<fasttack.ua.RegisterAddCardItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:registerAddCard")
    @WebResult(name = "registerAddCardItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "registerAddCard", targetNamespace = "http://sab/", className = "fasttack.ua.RegisterAddCard")
    @ResponseWrapper(localName = "registerAddCardResponse", targetNamespace = "http://sab/", className = "fasttack.ua.RegisterAddCardResponse")
    public List<RegisterAddCardItem> registerAddCard(
            @WebParam(name = "cardHashNumber", targetNamespace = "http://sab/")
                    String cardHashNumber,
            @WebParam(name = "firstNameLatin", targetNamespace = "http://sab/")
                    String firstNameLatin,
            @WebParam(name = "lastNameLatin", targetNamespace = "http://sab/")
                    String lastNameLatin,
            @WebParam(name = "codeWord", targetNamespace = "http://sab/")
                    String codeWord,
            @WebParam(name = "additionalInfo", targetNamespace = "http://sab/")
                    String additionalInfo,
            @WebParam(name = "prefixId", targetNamespace = "http://sab/")
                    Integer prefixId,
            @WebParam(name = "authRangeId", targetNamespace = "http://sab/")
                    Integer authRangeId,
            @WebParam(name = "codeCardId", targetNamespace = "http://sab/")
                    Integer codeCardId,
            @WebParam(name = "riskClassId", targetNamespace = "http://sab/")
                    Integer riskClassId,
            @WebParam(name = "chargeRenewFee", targetNamespace = "http://sab/")
                    Integer chargeRenewFee,
            @WebParam(name = "cardOwnerFullName", targetNamespace = "http://sab/")
                    String cardOwnerFullName)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Процедура получения списка сформированных и не обработанных DB файлов в Is-Card
     *
     *
     * @return
     *     returns java.util.List<fasttack.ua.GetDBFilesListItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getDBFilesList")
    @WebResult(name = "getDBFilesListItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getDBFilesList", targetNamespace = "http://sab/", className = "fasttack.ua.GetDBFilesList")
    @ResponseWrapper(localName = "getDBFilesListResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetDBFilesListResponse")
    public List<GetDBFilesListItem> getDBFilesList()
            throws DataServiceFault_Exception
    ;

    /**
     *
     * get transactions (operdate,type,amount,currency,info) by card account number and date period. USE: SIEBEL
     *
     *
     * @param accountNo
     * @param dateTo
     * @param dateFrom
     * @return
     *     returns java.util.List<fasttack.ua.CardTransaction>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardTransactionList")
    @WebResult(name = "cardTransaction", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardTransactionList", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardTransactionList")
    @ResponseWrapper(localName = "cardTransactionList", targetNamespace = "http://sab/", className = "fasttack.ua.CardTransactionList")
    public List<CardTransaction> getCardTransactionList(
            @WebParam(name = "accountNo", targetNamespace = "http://sab/")
                    String accountNo,
            @WebParam(name = "dateFrom", targetNamespace = "http://sab/")
                    String dateFrom,
            @WebParam(name = "dateTo", targetNamespace = "http://sab/")
                    String dateTo)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Установка адреса проживания и имени владельца в пользовательские поля на карте
     *
     *
     * @param cardId
     * @param contractId
     * @param addressDelivery
     * @param nameDelivery
     * @return
     *     returns java.util.List<fasttack.ua.SignEnvelopeItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:signEnvelope")
    @WebResult(name = "signEnvelopeItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "signEnvelope", targetNamespace = "http://sab/", className = "fasttack.ua.SignEnvelope")
    @ResponseWrapper(localName = "signEnvelopeResponse", targetNamespace = "http://sab/", className = "fasttack.ua.SignEnvelopeResponse")
    public List<SignEnvelopeItem> signEnvelope(
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    Integer cardId,
            @WebParam(name = "nameDelivery", targetNamespace = "http://sab/")
                    String nameDelivery,
            @WebParam(name = "addressDelivery", targetNamespace = "http://sab/")
                    String addressDelivery,
            @WebParam(name = "contractId", targetNamespace = "http://sab/")
                    Integer contractId)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Список названий отделений и их кодов, подчиненных главному офису и для которых существует доставка карт. USE: cfront.
     *
     *
     * @param branchId
     * @param branchType
     * @return
     *     returns java.util.List<fasttack.ua.GetCardDeliveryBranchesItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardDeliveryBranches")
    @WebResult(name = "getCardDeliveryBranchesItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardDeliveryBranches", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDeliveryBranches")
    @ResponseWrapper(localName = "getCardDeliveryBranchesResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardDeliveryBranchesResponse")
    public List<GetCardDeliveryBranchesItem> getCardDeliveryBranches(
            @WebParam(name = "branchId", targetNamespace = "http://sab/")
                    Integer branchId,
            @WebParam(name = "branchType", targetNamespace = "http://sab/")
                    Integer branchType)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Метод регистрирует PI контрагента в карточной системе (ИсКард). Производит регистрацию нового контрагента (если такого нет). Если клиент существует - ничего не происходит. Если произошла ошибка - возвращает Fault message. Source: процедура ALF_T24_REGISTER_CLIENT. USE: cfront.
     *
     *
     * @param middleNameUkr
     * @param nrTaxId
     * @param docSr
     * @param contInf7Staffdwp
     * @param contPersType
     * @param addrCityJur
     * @param contInf2Cellur
     * @param k070
     * @param addrStreet
     * @param taxRegDate
     * @param identification
     * @param residence
     * @param contInf6Regaddrhf
     * @param firstNameUkr
     * @param docNo
     * @param docIssueDate
     * @param k060
     * @param addrCity
     * @param contInf1Home
     * @param nationality
     * @param taxId
     * @param addrFlatJur
     * @param addrPostcodeJur
     * @param addrBuildNoJur
     * @param addrCountryJur
     * @param cardProduct
     * @param addrFlat
     * @param contInf8Contperph
     * @param docIssPlace
     * @param addrBuildNo
     * @param addrCountry
     * @param addrPostcode
     * @param contPersName
     * @param contInf4Fax
     * @param docTypeId
     * @param contInf5Email
     * @param modifiedBy
     * @param addrHouseNoJur
     * @param addrStreetJur
     * @param placeOfBirth
     * @param contInf3Work
     * @param dateOfBirth
     * @param lastNameUkr
     * @param isCardContragent
     * @param taxAdmCode
     * @param contragentId
     * @param addrRegionJur
     * @param addrDistrictJur
     * @param addrHouseNo
     * @param addrRegion
     * @param addrDistrict
     * @return
     *     returns java.util.List<fasttack.ua.CardContragent>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:registerCardContragent")
    @WebResult(name = "cardContragent", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "registerCardContragent", targetNamespace = "http://sab/", className = "fasttack.ua.RegisterCardContragent")
    @ResponseWrapper(localName = "registerCardContragentResponse", targetNamespace = "http://sab/", className = "fasttack.ua.RegisterCardContragentResponse")
    public List<CardContragent> registerCardContragent(
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    String contragentId,
            @WebParam(name = "taxId", targetNamespace = "http://sab/")
                    String taxId,
            @WebParam(name = "lastNameUkr", targetNamespace = "http://sab/")
                    String lastNameUkr,
            @WebParam(name = "firstNameUkr", targetNamespace = "http://sab/")
                    String firstNameUkr,
            @WebParam(name = "middleNameUkr", targetNamespace = "http://sab/")
                    String middleNameUkr,
            @WebParam(name = "docSr", targetNamespace = "http://sab/")
                    String docSr,
            @WebParam(name = "docNo", targetNamespace = "http://sab/")
                    String docNo,
            @WebParam(name = "docIssueDate", targetNamespace = "http://sab/")
                    XMLGregorianCalendar docIssueDate,
            @WebParam(name = "docIssPlace", targetNamespace = "http://sab/")
                    String docIssPlace,
            @WebParam(name = "dateOfBirth", targetNamespace = "http://sab/")
                    XMLGregorianCalendar dateOfBirth,
            @WebParam(name = "residence", targetNamespace = "http://sab/")
                    String residence,
            @WebParam(name = "taxAdmCode", targetNamespace = "http://sab/")
                    String taxAdmCode,
            @WebParam(name = "addrCountry", targetNamespace = "http://sab/")
                    String addrCountry,
            @WebParam(name = "addrPostcode", targetNamespace = "http://sab/")
                    String addrPostcode,
            @WebParam(name = "addrCity", targetNamespace = "http://sab/")
                    String addrCity,
            @WebParam(name = "addrRegion", targetNamespace = "http://sab/")
                    String addrRegion,
            @WebParam(name = "addrDistrict", targetNamespace = "http://sab/")
                    String addrDistrict,
            @WebParam(name = "addrStreet", targetNamespace = "http://sab/")
                    String addrStreet,
            @WebParam(name = "addrHouseNo", targetNamespace = "http://sab/")
                    String addrHouseNo,
            @WebParam(name = "addrFlat", targetNamespace = "http://sab/")
                    String addrFlat,
            @WebParam(name = "addrBuildNo", targetNamespace = "http://sab/")
                    String addrBuildNo,
            @WebParam(name = "addrCountryJur", targetNamespace = "http://sab/")
                    String addrCountryJur,
            @WebParam(name = "addrPostcodeJur", targetNamespace = "http://sab/")
                    String addrPostcodeJur,
            @WebParam(name = "addrCityJur", targetNamespace = "http://sab/")
                    String addrCityJur,
            @WebParam(name = "addrRegionJur", targetNamespace = "http://sab/")
                    String addrRegionJur,
            @WebParam(name = "addrDistrictJur", targetNamespace = "http://sab/")
                    String addrDistrictJur,
            @WebParam(name = "addrStreetJur", targetNamespace = "http://sab/")
                    String addrStreetJur,
            @WebParam(name = "addrHouseNoJur", targetNamespace = "http://sab/")
                    String addrHouseNoJur,
            @WebParam(name = "addrFlatJur", targetNamespace = "http://sab/")
                    String addrFlatJur,
            @WebParam(name = "addrBuildNoJur", targetNamespace = "http://sab/")
                    String addrBuildNoJur,
            @WebParam(name = "contInf1Home", targetNamespace = "http://sab/")
                    String contInf1Home,
            @WebParam(name = "contInf2Cellur", targetNamespace = "http://sab/")
                    String contInf2Cellur,
            @WebParam(name = "contInf3Work", targetNamespace = "http://sab/")
                    String contInf3Work,
            @WebParam(name = "contInf4Fax", targetNamespace = "http://sab/")
                    String contInf4Fax,
            @WebParam(name = "contInf5Email", targetNamespace = "http://sab/")
                    String contInf5Email,
            @WebParam(name = "contInf6Regaddrhf", targetNamespace = "http://sab/")
                    String contInf6Regaddrhf,
            @WebParam(name = "contInf7Staffdwp", targetNamespace = "http://sab/")
                    String contInf7Staffdwp,
            @WebParam(name = "contInf8Contperph", targetNamespace = "http://sab/")
                    String contInf8Contperph,
            @WebParam(name = "contPersType", targetNamespace = "http://sab/")
                    String contPersType,
            @WebParam(name = "contPersName", targetNamespace = "http://sab/")
                    String contPersName,
            @WebParam(name = "k060", targetNamespace = "http://sab/")
                    String k060,
            @WebParam(name = "k070", targetNamespace = "http://sab/")
                    String k070,
            @WebParam(name = "nrTaxId", targetNamespace = "http://sab/")
                    String nrTaxId,
            @WebParam(name = "taxRegDate", targetNamespace = "http://sab/")
                    XMLGregorianCalendar taxRegDate,
            @WebParam(name = "placeOfBirth", targetNamespace = "http://sab/")
                    String placeOfBirth,
            @WebParam(name = "cardProduct", targetNamespace = "http://sab/")
                    String cardProduct,
            @WebParam(name = "identification", targetNamespace = "http://sab/")
                    Integer identification,
            @WebParam(name = "modifiedBy", targetNamespace = "http://sab/")
                    String modifiedBy,
            @WebParam(name = "nationality", targetNamespace = "http://sab/")
                    String nationality,
            @WebParam(name = "docTypeId", targetNamespace = "http://sab/")
                    String docTypeId,
            @WebParam(name = "isCardContragent", targetNamespace = "http://sab/")
                    String isCardContragent)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Получение ответа Клиента на предложение рассрочки (Installment) в виде "больше не беспокоить". Указать либо contragentId, либо phoneNumber либо adviceId.
     *
     *
     * @param adviceId
     * @param phoneNumber
     * @param contragentId
     * @return
     *     returns java.util.List<fasttack.ua.GetDNDStatusItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getDNDStatus")
    @WebResult(name = "getDNDStatusItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getDNDStatus", targetNamespace = "http://sab/", className = "fasttack.ua.GetDNDStatus")
    @ResponseWrapper(localName = "getDNDStatusResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetDNDStatusResponse")
    public List<GetDNDStatusItem> getDNDStatus(
            @WebParam(name = "adviceId", targetNamespace = "http://sab/")
                    Integer adviceId,
            @WebParam(name = "phoneNumber", targetNamespace = "http://sab/")
                    String phoneNumber,
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    String contragentId)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Получение информации о карточном счете для передачи в Siebel
     *
     *
     * @param contragentId
     * @param cardId
     * @return
     *     returns java.util.List<fasttack.ua.GetFinsAppCardBySiebelItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getFinsAppCardBySiebel")
    @WebResult(name = "getFinsAppCardBySiebelItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getFinsAppCardBySiebel", targetNamespace = "http://sab/", className = "fasttack.ua.GetFinsAppCardBySiebel")
    @ResponseWrapper(localName = "getFinsAppCardBySiebelResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetFinsAppCardBySiebelResponse")
    public List<GetFinsAppCardBySiebelItem> getFinsAppCardBySiebel(
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    String cardId,
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    String contragentId)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Service register cardDeal/card/cardAccount, card personification. Source: процедура ALF_WRAP_REGISTERCONTRACT. в случае, если процедура возвращает errorcode, отличный от 0 - генерируется sql exeption с текстом errormessage (который тоже возвращает процедура IC.ALF_WRAP_REGISTERCONTRACT). USE: CFront
     *
     *
     * @param lastNameLatin
     * @param reportDeliveryModeId
     * @param posAgent
     * @param cardTemplateText
     * @param corpName
     * @param setActivate
     * @param dealNo
     * @param firstNameLatin
     * @param codeWord
     * @param emailAddress
     * @param brunchId
     * @param contragentId
     * @param cardIssueMode
     * @param cardNumber
     * @param outletCode
     * @return
     *     returns java.util.List<fasttack.ua.RegisterCardDealItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:registerCardDeal")
    @WebResult(name = "registerCardDealItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "registerCardDeal", targetNamespace = "http://sab/", className = "fasttack.ua.RegisterCardDeal")
    @ResponseWrapper(localName = "registerCardDealResponse", targetNamespace = "http://sab/", className = "fasttack.ua.RegisterCardDealResponse")
    public List<RegisterCardDealItem> registerCardDeal(
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    String contragentId,
            @WebParam(name = "cardNumber", targetNamespace = "http://sab/")
                    String cardNumber,
            @WebParam(name = "cardTemplateText", targetNamespace = "http://sab/")
                    String cardTemplateText,
            @WebParam(name = "codeWord", targetNamespace = "http://sab/")
                    String codeWord,
            @WebParam(name = "firstNameLatin", targetNamespace = "http://sab/")
                    String firstNameLatin,
            @WebParam(name = "lastNameLatin", targetNamespace = "http://sab/")
                    String lastNameLatin,
            @WebParam(name = "brunchId", targetNamespace = "http://sab/")
                    String brunchId,
            @WebParam(name = "setActivate", targetNamespace = "http://sab/")
                    String setActivate,
            @WebParam(name = "reportDeliveryModeId", targetNamespace = "http://sab/")
                    String reportDeliveryModeId,
            @WebParam(name = "emailAddress", targetNamespace = "http://sab/")
                    String emailAddress,
            @WebParam(name = "dealNo", targetNamespace = "http://sab/")
                    String dealNo,
            @WebParam(name = "outletCode", targetNamespace = "http://sab/")
                    String outletCode,
            @WebParam(name = "posAgent", targetNamespace = "http://sab/")
                    String posAgent,
            @WebParam(name = "corpName", targetNamespace = "http://sab/")
                    String corpName,
            @WebParam(name = "cardIssueMode", targetNamespace = "http://sab/")
                    String cardIssueMode)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Получение информации по проекту в isCard по идентификатору проекта
     *
     *
     * @param projectId
     * @return
     *     returns java.util.List<fasttack.ua.GetProjectInfoByProjectIdItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getProjectInfoByProjectId")
    @WebResult(name = "getProjectInfoByProjectIdItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getProjectInfoByProjectId", targetNamespace = "http://sab/", className = "fasttack.ua.GetProjectInfoByProjectId")
    @ResponseWrapper(localName = "getProjectInfoByProjectIdResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetProjectInfoByProjectIdResponse")
    public List<GetProjectInfoByProjectIdItem> getProjectInfoByProjectId(
            @WebParam(name = "projectId", targetNamespace = "http://sab/")
                    Integer projectId)
            throws DataServiceFault_Exception
    ;

    /**
     * Получение текущего субпродукта по карте
     *
     * @param cardId
     * @return
     *     returns java.util.List<fasttack.ua.GetCurrentSubproductItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCurrentSubproduct")
    @WebResult(name = "getCurrentSubproductItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCurrentSubproduct", targetNamespace = "http://sab/", className = "fasttack.ua.GetCurrentSubproduct")
    @ResponseWrapper(localName = "getCurrentSubproductResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCurrentSubproductResponse")
    public List<GetCurrentSubproductItem> getCurrentSubproduct(
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    String cardId)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Получение кода субпродукта по рассрочке (Installment), доступной для транзакции, полученной по каналу Advice
     *
     *
     * @param adviceId
     * @param equalAvlAmountIn
     * @param channel
     * @param transactionId
     * @return
     *     returns java.util.List<fasttack.ua.GetInstallmentProductItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getInstallmentProduct")
    @WebResult(name = "getInstallmentProductItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getInstallmentProduct", targetNamespace = "http://sab/", className = "fasttack.ua.GetInstallmentProduct")
    @ResponseWrapper(localName = "getInstallmentProductResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetInstallmentProductResponse")
    public List<GetInstallmentProductItem> getInstallmentProduct(
            @WebParam(name = "adviceId", targetNamespace = "http://sab/")
                    Integer adviceId,
            @WebParam(name = "channel", targetNamespace = "http://sab/")
                    String channel,
            @WebParam(name = "transactionId", targetNamespace = "http://sab/")
                    String transactionId,
            @WebParam(name = "equalAvlAmountIn", targetNamespace = "http://sab/")
                    String equalAvlAmountIn)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Получение информации по проекту в isCard по идентификатору проекта
     *
     *
     * @param iFullname
     * @return
     *     returns java.util.List<fasttack.ua.GetProjectInfoByAgrtplnameItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getProjectInfoByAgrtplname")
    @WebResult(name = "getProjectInfoByAgrtplnameItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getProjectInfoByAgrtplname", targetNamespace = "http://sab/", className = "fasttack.ua.GetProjectInfoByAgrtplname")
    @ResponseWrapper(localName = "getProjectInfoByAgrtplnameResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetProjectInfoByAgrtplnameResponse")
    public List<GetProjectInfoByAgrtplnameItem> getProjectInfoByAgrtplname(
            @WebParam(name = "i_fullname", targetNamespace = "http://sab/")
                    String iFullname)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Метод для поиска карт и карточных договоров по урезанным данным клиента физика. Если не задан ни contragentId ни docNo, то метод возвращает пустой список. Если по указанным данным будет найдено несколько договоров, в ответе будет только 2. В списке карт у договора должны остаться только те, которые заканчиваются на указанные 4 цифры. Mandatory fields: card4Last
     *
     *
     * @param contragentId
     * @param docNo
     * @param card4Last
     * @return
     *     returns java.util.List<fasttack.ua.CardDeal7>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:identifyCard")
    @WebResult(name = "cardDeal", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "identifyCard", targetNamespace = "http://sab/", className = "fasttack.ua.IdentifyCard")
    @ResponseWrapper(localName = "identifyCardResponse", targetNamespace = "http://sab/", className = "fasttack.ua.IdentifyCardResponse")
    public List<CardDeal7> identifyCard(
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    String contragentId,
            @WebParam(name = "docNo", targetNamespace = "http://sab/")
                    String docNo,
            @WebParam(name = "card4Last", targetNamespace = "http://sab/")
                    String card4Last)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Получение статуса дополнительных услуг по СКС договору
     *
     *
     * @param cardId
     * @return
     *     returns java.util.List<fasttack.ua.GetCardServiceStatesItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardServiceStates")
    @WebResult(name = "getCardServiceStatesItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardServiceStates", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardServiceStates")
    @ResponseWrapper(localName = "getCardServiceStatesResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardServiceStatesResponse")
    public List<GetCardServiceStatesItem> getCardServiceStates(
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    String cardId)
            throws DataServiceFault_Exception
    ;

    /**
     * Проверить допустимость операции перевыпуска
     *
     * @param modeId
     * @param cardId
     * @param recreateType
     * @return
     *     returns java.util.List<fasttack.ua.CheckOpportunityRecreateCardItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:checkOpportunityRecreateCard")
    @WebResult(name = "checkOpportunityRecreateCardItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "checkOpportunityRecreateCard", targetNamespace = "http://sab/", className = "fasttack.ua.CheckOpportunityRecreateCard")
    @ResponseWrapper(localName = "checkOpportunityRecreateCardResponse", targetNamespace = "http://sab/", className = "fasttack.ua.CheckOpportunityRecreateCardResponse")
    public List<CheckOpportunityRecreateCardItem> checkOpportunityRecreateCard(
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    Integer cardId,
            @WebParam(name = "recreateType", targetNamespace = "http://sab/")
                    Integer recreateType,
            @WebParam(name = "modeId", targetNamespace = "http://sab/")
                    Integer modeId)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Получение списка карт и имен проектов по идентификатору основного процесса заявки
     *
     *
     * @param cardId
     * @param messageIdPrimaryProcess
     * @param barCode
     * @return
     *     returns java.util.List<fasttack.ua.GetDeliveryCardByMessageIdItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getDeliveryCardByMessageId")
    @WebResult(name = "getDeliveryCardByMessageIdItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getDeliveryCardByMessageId", targetNamespace = "http://sab/", className = "fasttack.ua.GetDeliveryCardByMessageId")
    @ResponseWrapper(localName = "getDeliveryCardByMessageIdResponse", targetNamespace = "http://sab/", className = "fasttack.ua.GetDeliveryCardByMessageIdResponse")
    public List<GetDeliveryCardByMessageIdItem> getDeliveryCardByMessageId(
            @WebParam(name = "messageIdPrimaryProcess", targetNamespace = "http://sab/")
                    String messageIdPrimaryProcess,
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    Integer cardId,
            @WebParam(name = "barCode", targetNamespace = "http://sab/")
                    String barCode)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Получить карточки по deal id и дополнительно по cardHashNumber. originalCardStatusId: 2-Аннулированная,1-Приостановленная,0-Активная.
     *
     *
     * @param dealId
     * @param cardHashNumber
     * @return
     *     returns java.util.List<fasttack.ua.Card>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:getCardListByDealId")
    @WebResult(name = "card", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCardListByDealId", targetNamespace = "http://sab/", className = "fasttack.ua.GetCardListByDealId")
    @ResponseWrapper(localName = "cardList", targetNamespace = "http://sab/", className = "fasttack.ua.CardList")
    public List<Card> getCardListByDealId(
            @WebParam(name = "dealId", targetNamespace = "http://sab/")
                    String dealId,
            @WebParam(name = "cardHashNumber", targetNamespace = "http://sab/")
                    String cardHashNumber)
            throws DataServiceFault_Exception
    ;

    /**
     * Передача в IS-Card статуса доставки карты клиенту
     *
     * @param cardId
     * @param deliveryStatus
     * @return
     *     returns java.util.List<fasttack.ua.SetDeferredReissueCardStatusItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:setDeferredReissueCardStatus")
    @WebResult(name = "setDeferredReissueCardStatusItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "setDeferredReissueCardStatus", targetNamespace = "http://sab/", className = "fasttack.ua.SetDeferredReissueCardStatus")
    @ResponseWrapper(localName = "setDeferredReissueCardStatusResponse", targetNamespace = "http://sab/", className = "fasttack.ua.SetDeferredReissueCardStatusResponse")
    public List<SetDeferredReissueCardStatusItem> setDeferredReissueCardStatus(
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    String cardId,
            @WebParam(name = "deliveryStatus", targetNamespace = "http://sab/")
                    Integer deliveryStatus)
            throws DataServiceFault_Exception
    ;

    /**
     *
     * Изменение кодового слова в IsCard, Если кодовое слово не установлено - возвращает Fault message.
     *
     *
     * @param codeWord
     * @param cardId
     * @param cardHashNumber
     * @return
     *     returns java.util.List<fasttack.ua.SetCodeWordItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:setCodeWord")
    @WebResult(name = "setCodeWordItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "setCodeWord", targetNamespace = "http://sab/", className = "fasttack.ua.SetCodeWord")
    @ResponseWrapper(localName = "setCodeWordResponse", targetNamespace = "http://sab/", className = "fasttack.ua.SetCodeWordResponse")
    public List<SetCodeWordItem> setCodeWord(
            @WebParam(name = "cardHashNumber", targetNamespace = "http://sab/")
                    String cardHashNumber,
            @WebParam(name = "cardId", targetNamespace = "http://sab/")
                    Long cardId,
            @WebParam(name = "codeWord", targetNamespace = "http://sab/")
                    String codeWord)
            throws DataServiceFault_Exception
    ;

    /**
     * Изменения номера телефона на карточном договоре
     *
     * @param dealId
     * @param newPhoneNumber
     * @return
     *     returns java.util.List<fasttack.ua.ChangeDealPhoneNumberItem>
     * @throws DataServiceFault_Exception
     */
    @WebMethod(action = "urn:changeDealPhoneNumber")
    @WebResult(name = "changeDealPhoneNumberItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "changeDealPhoneNumber", targetNamespace = "http://sab/", className = "fasttack.ua.ChangeDealPhoneNumber")
    @ResponseWrapper(localName = "changeDealPhoneNumberResponse", targetNamespace = "http://sab/", className = "fasttack.ua.ChangeDealPhoneNumberResponse")
    public List<ChangeDealPhoneNumberItem> changeDealPhoneNumber(
            @WebParam(name = "dealId", targetNamespace = "http://sab/")
                    String dealId,
            @WebParam(name = "newPhoneNumber", targetNamespace = "http://sab/")
                    String newPhoneNumber)
            throws DataServiceFault_Exception
    ;

}
