
package com.cts.fasttack.bank.client.ws.contragent;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ContragentPortType", targetNamespace = "http://sab/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ContragentPortType {


    /**
     * 
     * ����� DS ������� ��� ��������� ���������� ���������� �� ������� �� ��� � ��������������� ��������� ���� ���������� ���������� �� CSence.
     * 
     * 
     * @param taxId
     * @param contactType
     * @return
     *     returns java.util.List<fasttack.GetContactByTaxIdItem>
     */
    @WebMethod(action = "urn:getContactByTaxId")
    @WebResult(name = "getContactByTaxIdItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getContactByTaxId", targetNamespace = "http://sab/", className = "fasttack.GetContactByTaxId")
    @ResponseWrapper(localName = "getContactByTaxIdResponse", targetNamespace = "http://sab/", className = "fasttack.GetContactByTaxIdResponse")
    public List<GetContactByTaxIdItem> getContactByTaxId(
            @WebParam(name = "taxId", targetNamespace = "http://sab/")
                    Long taxId,
            @WebParam(name = "contactType", targetNamespace = "http://sab/")
                    String contactType);

    /**
     * 
     * ����� ������� �� ����������� ���� / ���/������ / �����, ������ ��������� / ������������. ����������� ������ �� ���������� ���������� � ������ � ������� ������������
     * 
     * 
     * @param docSr
     * @param contragentId
     * @param contragentCategory
     * @param taxId
     * @param sName
     * @param name
     * @param docNo
     * @return
     *     returns java.util.List<fasttack.Contragent>
     */
    @WebMethod(action = "urn:searchContragent2")
    @WebResult(name = "contragent", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "searchContragent2", targetNamespace = "http://sab/", className = "fasttack.SearchContragent2")
    @ResponseWrapper(localName = "searchContragent2Response", targetNamespace = "http://sab/", className = "fasttack.SearchContragent2Response")
    public List<Contragent> searchContragent2(
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    String contragentId,
            @WebParam(name = "taxId", targetNamespace = "http://sab/")
                    String taxId,
            @WebParam(name = "docSr", targetNamespace = "http://sab/")
                    String docSr,
            @WebParam(name = "docNo", targetNamespace = "http://sab/")
                    String docNo,
            @WebParam(name = "sName", targetNamespace = "http://sab/")
                    String sName,
            @WebParam(name = "name", targetNamespace = "http://sab/")
                    String name,
            @WebParam(name = "contragentCategory", targetNamespace = "http://sab/")
                    String contragentCategory);

    /**
     * Get Contragent's finnClass
     * 
     * @param taxId
     * @return
     *     returns java.util.List<fasttack.Contragent>
     */
    @WebMethod(action = "urn:getFinnClass")
    @WebResult(name = "contragent", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getFinnClass", targetNamespace = "http://sab/", className = "fasttack.GetFinnClass")
    @ResponseWrapper(localName = "getContragentByIdResponse", targetNamespace = "http://sab/", className = "fasttack.GetContragentByIdResponse")
    public List<Contragent> getFinnClass(
            @WebParam(name = "taxId", targetNamespace = "http://sab/")
                    String taxId);

    /**
     * 
     * ���������� �����������-������� �� ���. ���� ��������� �� ������ �� ������������ ������ ������. �� ���������� ������������ � ���������� ��� (000000000).
     * 
     * 
     * @param taxId
     * @return
     *     returns java.util.List<fasttack.Contragent>
     */
    @WebMethod(action = "urn:getContragentByTaxId")
    @WebResult(name = "contragent", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getContragentByTaxId", targetNamespace = "http://sab/", className = "fasttack.GetContragentByTaxId")
    @ResponseWrapper(localName = "getContragentByTaxIdResponce", targetNamespace = "http://sab/", className = "fasttack.GetContragentByTaxIdResponce")
    public List<Contragent> getContragentByTaxId(
            @WebParam(name = "taxId", targetNamespace = "http://sab/")
                    String taxId);

    /**
     * ���������/������ �������� ���������� ������
     * 
     * @param contragentId
     * @param isCardContragent
     * @return
     *     returns java.util.List<fasttack.RegisterCardDealItem>
     */
    @WebMethod(action = "urn:registerCardDeal")
    @WebResult(name = "registerCardDealItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "registerCardDeal", targetNamespace = "http://sab/", className = "fasttack.RegisterCardDeal")
    @ResponseWrapper(localName = "registerCardDealResponse", targetNamespace = "http://sab/", className = "fasttack.RegisterCardDealResponse")
    public List<RegisterCardDealItem> registerCardDeal(
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    String contragentId,
            @WebParam(name = "IsCardContragent", targetNamespace = "http://sab/")
                    String isCardContragent);

    /**
     * 
     * Sends request to B2 and IsCard to find contragentId by accountNo, then requests T24 for contragent data. USE: MAB.
     * 
     * 
     * @param accountNo
     * @return
     *     returns java.util.List<fasttack.SearchContragentByAccountNoItem>
     */
    @WebMethod(action = "urn:searchContragentByAccountNo")
    @WebResult(name = "searchContragentByAccountNoItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "searchContragentByAccountNo", targetNamespace = "http://sab/", className = "fasttack.SearchContragentByAccountNo")
    @ResponseWrapper(localName = "searchContragentByAccountNoResponse", targetNamespace = "http://sab/", className = "fasttack.SearchContragentByAccountNoResponse")
    public List<SearchContragentByAccountNoItem> searchContragentByAccountNo(
            @WebParam(name = "accountNo", targetNamespace = "http://sab/")
                    String accountNo);

    /**
     * 
     * �������� ������������ ���������� ������ �����������
     * 
     * 
     * @param middleNameUkr
     * @param nrTaxId
     * @param docSr
     * @param applicationType
     * @param docEndDate
     * @param nrStateRegisterCountry
     * @param contPersType
     * @param addrCityJur
     * @param contInf8ContPer
     * @param addrCityTypeJur
     * @param contInf2Cellur
     * @param k070
     * @param addrStreet
     * @param taxRegDate
     * @param addrKOATUUCodeJur
     * @param residence
     * @param addrKOATUUCode
     * @param fatcaQuest
     * @param firstNameUkr
     * @param docNo
     * @param addrKOATUUClassJur
     * @param docIssueDate
     * @param lastNameEng
     * @param recordNo
     * @param k060
     * @param taxCategory
     * @param addrCity
     * @param k050
     * @param contInf1Home
     * @param nationality
     * @param taxId
     * @param contInf5EMail
     * @param k013
     * @param addrFlatJur
     * @param addrCityType
     * @param addrRegionNameJur
     * @param addrPostcodeJur
     * @param addrBuildNoJur
     * @param addrCountryJur
     * @param gender
     * @param addrFlat
     * @param docIssPlace
     * @param addrBuildNo
     * @param addrCountry
     * @param contPersName
     * @param contInf4Fax
     * @param docTypeId
     * @param modifiedBy
     * @param relManager
     * @param addrHouseNoJur
     * @param addrStreetJur
     * @param contInf6RegAddr
     * @param placeOfBirth
     * @param additionalInfo2
     * @param contInf3Work
     * @param additionalInfo1
     * @param firstNameEng
     * @param dateOfBirth
     * @param lastNameUkr
     * @param addrKOATUUClass
     * @param addrRegionName
     * @param isCardContragent
     * @param externalSystem
     * @param taxAdmCode
     * @param fatcaStatus
     * @param finBlock
     * @param contInf7StaffDw
     * @param k110
     * @param contragentId
     * @param addrRegionJur
     * @param addrDistrictJur
     * @param addrHouseNo
     * @param addrRegion
     * @param addrDistrict
     * @param addrPostCode
     * @param toboId
     * @return
     *     returns java.util.List<fasttack.CheckContragentItem>
     */
    @WebMethod(action = "urn:checkContragent")
    @WebResult(name = "checkContragentItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "checkContragent", targetNamespace = "http://sab/", className = "fasttack.CheckContragent")
    @ResponseWrapper(localName = "checkContragentResponse", targetNamespace = "http://sab/", className = "fasttack.CheckContragentResponse")
    public List<CheckContragentItem> checkContragent(
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    String contragentId,
            @WebParam(name = "taxId", targetNamespace = "http://sab/")
                    String taxId,
            @WebParam(name = "lastNameUkr", targetNamespace = "http://sab/")
                    String lastNameUkr,
            @WebParam(name = "firstNameUkr", targetNamespace = "http://sab/")
                    String firstNameUkr,
            @WebParam(name = "middleNameUkr", targetNamespace = "http://sab/")
                    String middleNameUkr,
            @WebParam(name = "docSr", targetNamespace = "http://sab/")
                    String docSr,
            @WebParam(name = "docNo", targetNamespace = "http://sab/")
                    String docNo,
            @WebParam(name = "docIssueDate", targetNamespace = "http://sab/")
                    XMLGregorianCalendar docIssueDate,
            @WebParam(name = "docIssPlace", targetNamespace = "http://sab/")
                    String docIssPlace,
            @WebParam(name = "docEndDate", targetNamespace = "http://sab/")
                    XMLGregorianCalendar docEndDate,
            @WebParam(name = "recordNo", targetNamespace = "http://sab/")
                    String recordNo,
            @WebParam(name = "dateOfBirth", targetNamespace = "http://sab/")
                    XMLGregorianCalendar dateOfBirth,
            @WebParam(name = "residence", targetNamespace = "http://sab/")
                    String residence,
            @WebParam(name = "taxAdmCode", targetNamespace = "http://sab/")
                    String taxAdmCode,
            @WebParam(name = "gender", targetNamespace = "http://sab/")
                    String gender,
            @WebParam(name = "finBlock", targetNamespace = "http://sab/")
                    String finBlock,
            @WebParam(name = "addrKOATUUCode", targetNamespace = "http://sab/")
                    String addrKOATUUCode,
            @WebParam(name = "addrKOATUUClass", targetNamespace = "http://sab/")
                    String addrKOATUUClass,
            @WebParam(name = "addrCountry", targetNamespace = "http://sab/")
                    String addrCountry,
            @WebParam(name = "addrPostCode", targetNamespace = "http://sab/")
                    String addrPostCode,
            @WebParam(name = "addrCityType", targetNamespace = "http://sab/")
                    String addrCityType,
            @WebParam(name = "addrCity", targetNamespace = "http://sab/")
                    String addrCity,
            @WebParam(name = "addrRegion", targetNamespace = "http://sab/")
                    String addrRegion,
            @WebParam(name = "addrRegionName", targetNamespace = "http://sab/")
                    String addrRegionName,
            @WebParam(name = "addrDistrict", targetNamespace = "http://sab/")
                    String addrDistrict,
            @WebParam(name = "addrStreet", targetNamespace = "http://sab/")
                    String addrStreet,
            @WebParam(name = "addrHouseNo", targetNamespace = "http://sab/")
                    String addrHouseNo,
            @WebParam(name = "addrFlat", targetNamespace = "http://sab/")
                    String addrFlat,
            @WebParam(name = "addrBuildNo", targetNamespace = "http://sab/")
                    String addrBuildNo,
            @WebParam(name = "addrKOATUUCodeJur", targetNamespace = "http://sab/")
                    String addrKOATUUCodeJur,
            @WebParam(name = "AddrKOATUUClassJur", targetNamespace = "http://sab/")
                    String addrKOATUUClassJur,
            @WebParam(name = "addrCountryJur", targetNamespace = "http://sab/")
                    String addrCountryJur,
            @WebParam(name = "addrPostcodeJur", targetNamespace = "http://sab/")
                    String addrPostcodeJur,
            @WebParam(name = "AddrCityTypeJur", targetNamespace = "http://sab/")
                    String addrCityTypeJur,
            @WebParam(name = "addrCityJur", targetNamespace = "http://sab/")
                    String addrCityJur,
            @WebParam(name = "addrRegionJur", targetNamespace = "http://sab/")
                    String addrRegionJur,
            @WebParam(name = "addrRegionNameJur", targetNamespace = "http://sab/")
                    String addrRegionNameJur,
            @WebParam(name = "addrDistrictJur", targetNamespace = "http://sab/")
                    String addrDistrictJur,
            @WebParam(name = "addrStreetJur", targetNamespace = "http://sab/")
                    String addrStreetJur,
            @WebParam(name = "addrHouseNoJur", targetNamespace = "http://sab/")
                    String addrHouseNoJur,
            @WebParam(name = "addrFlatJur", targetNamespace = "http://sab/")
                    String addrFlatJur,
            @WebParam(name = "addrBuildNoJur", targetNamespace = "http://sab/")
                    String addrBuildNoJur,
            @WebParam(name = "contInf1Home", targetNamespace = "http://sab/")
                    String contInf1Home,
            @WebParam(name = "contInf2Cellur", targetNamespace = "http://sab/")
                    String contInf2Cellur,
            @WebParam(name = "contInf3Work", targetNamespace = "http://sab/")
                    String contInf3Work,
            @WebParam(name = "contInf4Fax", targetNamespace = "http://sab/")
                    String contInf4Fax,
            @WebParam(name = "contInf5EMail", targetNamespace = "http://sab/")
                    String contInf5EMail,
            @WebParam(name = "contInf6RegAddr", targetNamespace = "http://sab/")
                    String contInf6RegAddr,
            @WebParam(name = "contInf7StaffDw", targetNamespace = "http://sab/")
                    String contInf7StaffDw,
            @WebParam(name = "contInf8ContPer", targetNamespace = "http://sab/")
                    String contInf8ContPer,
            @WebParam(name = "contPersType", targetNamespace = "http://sab/")
                    String contPersType,
            @WebParam(name = "contPersName", targetNamespace = "http://sab/")
                    String contPersName,
            @WebParam(name = "k013", targetNamespace = "http://sab/")
                    String k013,
            @WebParam(name = "k050", targetNamespace = "http://sab/")
                    String k050,
            @WebParam(name = "k060", targetNamespace = "http://sab/")
                    String k060,
            @WebParam(name = "k070", targetNamespace = "http://sab/")
                    String k070,
            @WebParam(name = "k110", targetNamespace = "http://sab/")
                    String k110,
            @WebParam(name = "nrTaxId", targetNamespace = "http://sab/")
                    String nrTaxId,
            @WebParam(name = "nrStateRegisterCountry", targetNamespace = "http://sab/")
                    String nrStateRegisterCountry,
            @WebParam(name = "taxRegDate", targetNamespace = "http://sab/")
                    XMLGregorianCalendar taxRegDate,
            @WebParam(name = "placeOfBirth", targetNamespace = "http://sab/")
                    String placeOfBirth,
            @WebParam(name = "modifiedBy", targetNamespace = "http://sab/")
                    String modifiedBy,
            @WebParam(name = "nationality", targetNamespace = "http://sab/")
                    String nationality,
            @WebParam(name = "docTypeId", targetNamespace = "http://sab/")
                    String docTypeId,
            @WebParam(name = "isCardContragent", targetNamespace = "http://sab/")
                    String isCardContragent,
            @WebParam(name = "firstNameEng", targetNamespace = "http://sab/")
                    String firstNameEng,
            @WebParam(name = "lastNameEng", targetNamespace = "http://sab/")
                    String lastNameEng,
            @WebParam(name = "taxCategory", targetNamespace = "http://sab/")
                    String taxCategory,
            @WebParam(name = "additionalInfo1", targetNamespace = "http://sab/")
                    String additionalInfo1,
            @WebParam(name = "additionalInfo2", targetNamespace = "http://sab/")
                    String additionalInfo2,
            @WebParam(name = "toboId", targetNamespace = "http://sab/")
                    String toboId,
            @WebParam(name = "relManager", targetNamespace = "http://sab/")
                    String relManager,
            @WebParam(name = "fatcaQuest", targetNamespace = "http://sab/")
                    Integer fatcaQuest,
            @WebParam(name = "fatcaStatus", targetNamespace = "http://sab/")
                    Integer fatcaStatus,
            @WebParam(name = "externalSystem", targetNamespace = "http://sab/")
                    String externalSystem,
            @WebParam(name = "applicationType", targetNamespace = "http://sab/")
                    String applicationType);

    /**
     * 
     * Sends request to B2 and IsCard to find contragentId by dealNo, then requests T24 for contragent data. USE: MAB.
     * 
     * 
     * @param dealNo
     * @return
     *     returns java.util.List<fasttack.SearchContragentByDealNoItem>
     */
    @WebMethod(action = "urn:searchContragentByDealNo")
    @WebResult(name = "searchContragentByDealNoItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "searchContragentByDealNo", targetNamespace = "http://sab/", className = "fasttack.SearchContragentByDealNo")
    @ResponseWrapper(localName = "searchContragentByDealNoResponse", targetNamespace = "http://sab/", className = "fasttack.SearchContragentByDealNoResponse")
    public List<SearchContragentByDealNoItem> searchContragentByDealNo(
            @WebParam(name = "dealNo", targetNamespace = "http://sab/")
                    String dealNo);

    /**
     * WS ��� ��������� ���������� �� ������ �����������
     * 
     * @param contragentId
     * @param relativeSector
     * @return
     *     returns java.util.List<fasttack.GetContragentRelationsItem>
     */
    @WebMethod(action = "urn:getContragentRelations")
    @WebResult(name = "getContragentRelationsItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getContragentRelations", targetNamespace = "http://sab/", className = "fasttack.GetContragentRelations")
    @ResponseWrapper(localName = "getContragentRelationsResponse", targetNamespace = "http://sab/", className = "fasttack.GetContragentRelationsResponse")
    public List<GetContragentRelationsItem> getContragentRelations(
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    String contragentId,
            @WebParam(name = "relativeSector", targetNamespace = "http://sab/")
                    String relativeSector);

    /**
     * ������ ���������� ��������� ����� �� �2
     * 
     * @param contragentId
     * @return
     *     returns java.util.List<fasttack.GetFinMonitorRiskByContragentIdItem>
     */
    @WebMethod(action = "urn:getFinMonitorRiskByContragentId")
    @WebResult(name = "getFinMonitorRiskByContragentIdItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getFinMonitorRiskByContragentId", targetNamespace = "http://sab/", className = "fasttack.GetFinMonitorRiskByContragentId")
    @ResponseWrapper(localName = "getFinMonitorRiskByContragentIdResponce", targetNamespace = "http://sab/", className = "fasttack.GetFinMonitorRiskByContragentIdResponce")
    public List<GetFinMonitorRiskByContragentIdItem> getFinMonitorRiskByContragentId(
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    String contragentId);

    /**
     * 
     * ��������� ������ �� ����������� �� ��� ����������� ��������������
     * 
     * 
     * @param id
     * @return
     *     returns java.util.List<fasttack.Contragent>
     */
    @WebMethod(action = "urn:getContragentById")
    @WebResult(name = "contragent", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getContragentById", targetNamespace = "http://sab/", className = "fasttack.GetContragentById")
    @ResponseWrapper(localName = "getContragentByIdResponse", targetNamespace = "http://sab/", className = "fasttack.GetContragentByIdResponse")
    public List<Contragent> getContragentById(
            @WebParam(name = "Id", targetNamespace = "http://sab/")
                    String id);

    /**
     * 
     * ��������������� ��������� ��� ������ ����������� ��: ������ �������� ��� ����� ���������� �������� (2909), ������ �������� ��� ����� ����������� �������� (2630, 2620), ������ �������� ��� ����� �������� �����(2620), ������ ��������, ����� ��� ������ ���������� �������(2625). ������ ��������� ���� ������ ����������� ���� ���������� ������. ���� ������� ���� ���������� �� ������. ���� �������� ����� ����� ������ - ��� ������ ��� �������/����������� �� �������.
     * 
     * 
     * @param searchString
     * @return
     *     returns java.util.List<fasttack.IdentifyContragentByDealItem>
     */
    @WebMethod(action = "urn:identifyContragentByDeal")
    @WebResult(name = "identifyContragentByDealItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "identifyContragentByDeal", targetNamespace = "http://sab/", className = "fasttack.IdentifyContragentByDeal")
    @ResponseWrapper(localName = "identifyContragentByDealResponse", targetNamespace = "http://sab/", className = "fasttack.IdentifyContragentByDealResponse")
    public List<IdentifyContragentByDealItem> identifyContragentByDeal(
            @WebParam(name = "searchString", targetNamespace = "http://sab/")
                    String searchString);

    /**
     * 
     * ����� ���������� ����������� ������ �� ������� �� ��� ������ (���������). �� ������ ������ ������ ������������� ������ �� ������� �����.
     * 
     * 
     * @param taxId
     * @return
     *     returns java.util.List<fasttack.GetCustomerProfileByTaxIdItem>
     */
    @WebMethod(action = "urn:getCustomerProfileByTaxId")
    @WebResult(name = "getCustomerProfileByTaxIdItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCustomerProfileByTaxId", targetNamespace = "http://sab/", className = "fasttack.GetCustomerProfileByTaxId")
    @ResponseWrapper(localName = "getCustomerProfileByTaxIdResponce", targetNamespace = "http://sab/", className = "fasttack.GetCustomerProfileByTaxIdResponce")
    public List<GetCustomerProfileByTaxIdItem> getCustomerProfileByTaxId(
            @WebParam(name = "taxId", targetNamespace = "http://sab/")
                    String taxId);

    /**
     * 
     * ������ ����� ������������ ������. �� ���� id ����������� � ������� �2, ����� �������� ��������� ���������� � ������� �24 �� ID, � �� ����� �������� �� TaxID.
     * 
     * 
     * @param taxId
     * @return
     *     returns java.util.List<fasttack.CustomerProfileFull>
     */
    @WebMethod(action = "urn:getCustomerProfileFull")
    @WebResult(name = "customerProfileFull", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "getCustomerProfileFull", targetNamespace = "http://sab/", className = "fasttack.GetCustomerProfileFull")
    @ResponseWrapper(localName = "getCustomerProfileFullResponse", targetNamespace = "http://sab/", className = "fasttack.GetCustomerProfileFullResponse")
    public List<CustomerProfileFull> getCustomerProfileFull(
            @WebParam(name = "taxId", targetNamespace = "http://sab/")
                    String taxId);

    /**
     * 
     * ����� ������� ����������� �� ����������� ���� / ���/������ / �����, ������ ��������� / ������������. ����������� ������ �� ���������� ���������� � ������ � ������� ������������.
     * 
     * 
     * @param docSr
     * @param contragentId
     * @param contragentCategory
     * @param taxId
     * @param sName
     * @param name
     * @param searchActive
     * @param docNo
     * @return
     *     returns java.util.List<fasttack.Contragent>
     */
    @WebMethod(action = "urn:searchContragentUSB")
    @WebResult(name = "contragent", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "searchContragentUSB", targetNamespace = "http://sab/", className = "fasttack.SearchContragentUSB")
    @ResponseWrapper(localName = "searchContragentUSBResponse", targetNamespace = "http://sab/", className = "fasttack.SearchContragentUSBResponse")
    public List<Contragent> searchContragentUSB(
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    String contragentId,
            @WebParam(name = "taxId", targetNamespace = "http://sab/")
                    String taxId,
            @WebParam(name = "docSr", targetNamespace = "http://sab/")
                    String docSr,
            @WebParam(name = "docNo", targetNamespace = "http://sab/")
                    String docNo,
            @WebParam(name = "sName", targetNamespace = "http://sab/")
                    String sName,
            @WebParam(name = "name", targetNamespace = "http://sab/")
                    String name,
            @WebParam(name = "contragentCategory", targetNamespace = "http://sab/")
                    String contragentCategory,
            @WebParam(name = "searchActive", targetNamespace = "http://sab/")
                    String searchActive);

    /**
     * 
     * ������������ ����������� ���� �� ���������� � ��� �������, ���� ������� ������ ���� ��� ���. ����� �������� ����������������� ����� ����������� � ������� CSense.
     * 
     * 
     * @param middleNameUkr
     * @param nrTaxId
     * @param fmqParamComment
     * @param docSr
     * @param applicationType
     * @param docEndDate
     * @param nrStateRegisterCountry
     * @param fmqParamDate
     * @param contInf7Staffdwp
     * @param contPersType
     * @param addrCityJur
     * @param contInf2Cellur
     * @param addrCityTypeJur
     * @param signDate
     * @param k070
     * @param activityTypes
     * @param addrStreet
     * @param taxRegDate
     * @param identification
     * @param workTypesCode
     * @param addrKOATUUCodeJur
     * @param residence
     * @param contInf6Regaddrhf
     * @param addrKOATUUCode
     * @param bankProductsCode
     * @param fatcaQuest
     * @param sectorClassificationCode
     * @param firstNameUkr
     * @param positionTypesCode
     * @param docNo
     * @param addrKOATUUClassJur
     * @param docIssueDate
     * @param lastNameEng
     * @param recordNo
     * @param k060
     * @param taxCategory
     * @param stateRegDocSrNo
     * @param addrCity
     * @param propertyTypesCode
     * @param contInf1Home
     * @param nationality
     * @param taxId
     * @param addrFlatJur
     * @param addrCityType
     * @param incomeSourcesText
     * @param addrRegionNameJur
     * @param incomeLevelsCode
     * @param addrPostcodeJur
     * @param addrBuildNoJur
     * @param addrCountryJur
     * @param incomeSourcesCode
     * @param accountsInOtherBanks
     * @param gender
     * @param cardProduct
     * @param addrFlat
     * @param contInf8Contperph
     * @param docIssPlace
     * @param workKind
     * @param addrBuildNo
     * @param addrCountry
     * @param addrPostcode
     * @param contPersName
     * @param finnClass
     * @param contInf4Fax
     * @param docTypeId
     * @param contInf5Email
     * @param modifiedBy
     * @param sectorClassificationText
     * @param workPlace
     * @param workTypesText
     * @param addrHouseNoJur
     * @param addrStreetJur
     * @param placeOfBirth
     * @param controller
     * @param additionalInfo2
     * @param contInf3Work
     * @param positionTypesText
     * @param additionalInfo1
     * @param firstNameEng
     * @param dateOfBirth
     * @param lastNameUkr
     * @param workTypesTaxReg
     * @param isPublicPerson
     * @param addrKOATUUClass
     * @param addrRegionName
     * @param isCardContragent
     * @param externalSystem
     * @param taxAdmCode
     * @param receipts
     * @param fatcaStatus
     * @param contragentId
     * @param addrRegionJur
     * @param addrDistrictJur
     * @param addrHouseNo
     * @param addrRegion
     * @param addrDistrict
     * @return
     *     returns java.util.List<fasttack.RegisterContragentResponse>
     */
    @WebMethod(action = "urn:registerContragent")
    @WebResult(name = "registerContragentResponse", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "registerContragent", targetNamespace = "http://sab/", className = "fasttack.RegisterContragent")
    @ResponseWrapper(localName = "registerContragentResponses", targetNamespace = "http://sab/", className = "fasttack.RegisterContragentResponses")
    public List<RegisterContragentResponse> registerContragent(
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    String contragentId,
            @WebParam(name = "taxId", targetNamespace = "http://sab/")
                    String taxId,
            @WebParam(name = "lastNameUkr", targetNamespace = "http://sab/")
                    String lastNameUkr,
            @WebParam(name = "firstNameUkr", targetNamespace = "http://sab/")
                    String firstNameUkr,
            @WebParam(name = "middleNameUkr", targetNamespace = "http://sab/")
                    String middleNameUkr,
            @WebParam(name = "docSr", targetNamespace = "http://sab/")
                    String docSr,
            @WebParam(name = "docNo", targetNamespace = "http://sab/")
                    String docNo,
            @WebParam(name = "docIssueDate", targetNamespace = "http://sab/")
                    XMLGregorianCalendar docIssueDate,
            @WebParam(name = "docIssPlace", targetNamespace = "http://sab/")
                    String docIssPlace,
            @WebParam(name = "docEndDate", targetNamespace = "http://sab/")
                    XMLGregorianCalendar docEndDate,
            @WebParam(name = "recordNo", targetNamespace = "http://sab/")
                    String recordNo,
            @WebParam(name = "dateOfBirth", targetNamespace = "http://sab/")
                    XMLGregorianCalendar dateOfBirth,
            @WebParam(name = "residence", targetNamespace = "http://sab/")
                    String residence,
            @WebParam(name = "nrStateRegisterCountry", targetNamespace = "http://sab/")
                    String nrStateRegisterCountry,
            @WebParam(name = "taxAdmCode", targetNamespace = "http://sab/")
                    String taxAdmCode,
            @WebParam(name = "addrCountry", targetNamespace = "http://sab/")
                    String addrCountry,
            @WebParam(name = "addrPostcode", targetNamespace = "http://sab/")
                    String addrPostcode,
            @WebParam(name = "addrCity", targetNamespace = "http://sab/")
                    String addrCity,
            @WebParam(name = "addrRegion", targetNamespace = "http://sab/")
                    String addrRegion,
            @WebParam(name = "addrRegionName", targetNamespace = "http://sab/")
                    String addrRegionName,
            @WebParam(name = "addrDistrict", targetNamespace = "http://sab/")
                    String addrDistrict,
            @WebParam(name = "addrStreet", targetNamespace = "http://sab/")
                    String addrStreet,
            @WebParam(name = "addrHouseNo", targetNamespace = "http://sab/")
                    String addrHouseNo,
            @WebParam(name = "addrFlat", targetNamespace = "http://sab/")
                    String addrFlat,
            @WebParam(name = "addrBuildNo", targetNamespace = "http://sab/")
                    String addrBuildNo,
            @WebParam(name = "addrCountryJur", targetNamespace = "http://sab/")
                    String addrCountryJur,
            @WebParam(name = "addrPostcodeJur", targetNamespace = "http://sab/")
                    String addrPostcodeJur,
            @WebParam(name = "addrCityJur", targetNamespace = "http://sab/")
                    String addrCityJur,
            @WebParam(name = "addrRegionJur", targetNamespace = "http://sab/")
                    String addrRegionJur,
            @WebParam(name = "addrRegionNameJur", targetNamespace = "http://sab/")
                    String addrRegionNameJur,
            @WebParam(name = "addrDistrictJur", targetNamespace = "http://sab/")
                    String addrDistrictJur,
            @WebParam(name = "addrStreetJur", targetNamespace = "http://sab/")
                    String addrStreetJur,
            @WebParam(name = "addrHouseNoJur", targetNamespace = "http://sab/")
                    String addrHouseNoJur,
            @WebParam(name = "addrFlatJur", targetNamespace = "http://sab/")
                    String addrFlatJur,
            @WebParam(name = "addrBuildNoJur", targetNamespace = "http://sab/")
                    String addrBuildNoJur,
            @WebParam(name = "contInf1Home", targetNamespace = "http://sab/")
                    String contInf1Home,
            @WebParam(name = "contInf2Cellur", targetNamespace = "http://sab/")
                    String contInf2Cellur,
            @WebParam(name = "contInf3Work", targetNamespace = "http://sab/")
                    String contInf3Work,
            @WebParam(name = "contInf4Fax", targetNamespace = "http://sab/")
                    String contInf4Fax,
            @WebParam(name = "contInf5Email", targetNamespace = "http://sab/")
                    String contInf5Email,
            @WebParam(name = "contInf6Regaddrhf", targetNamespace = "http://sab/")
                    String contInf6Regaddrhf,
            @WebParam(name = "contInf7Staffdwp", targetNamespace = "http://sab/")
                    String contInf7Staffdwp,
            @WebParam(name = "contInf8Contperph", targetNamespace = "http://sab/")
                    String contInf8Contperph,
            @WebParam(name = "contPersType", targetNamespace = "http://sab/")
                    String contPersType,
            @WebParam(name = "contPersName", targetNamespace = "http://sab/")
                    String contPersName,
            @WebParam(name = "k060", targetNamespace = "http://sab/")
                    String k060,
            @WebParam(name = "k070", targetNamespace = "http://sab/")
                    String k070,
            @WebParam(name = "nrTaxId", targetNamespace = "http://sab/")
                    String nrTaxId,
            @WebParam(name = "taxRegDate", targetNamespace = "http://sab/")
                    XMLGregorianCalendar taxRegDate,
            @WebParam(name = "placeOfBirth", targetNamespace = "http://sab/")
                    String placeOfBirth,
            @WebParam(name = "cardProduct", targetNamespace = "http://sab/")
                    String cardProduct,
            @WebParam(name = "identification", targetNamespace = "http://sab/")
                    Integer identification,
            @WebParam(name = "modifiedBy", targetNamespace = "http://sab/")
                    String modifiedBy,
            @WebParam(name = "nationality", targetNamespace = "http://sab/")
                    String nationality,
            @WebParam(name = "docTypeId", targetNamespace = "http://sab/")
                    String docTypeId,
            @WebParam(name = "isCardContragent", targetNamespace = "http://sab/")
                    String isCardContragent,
            @WebParam(name = "firstNameEng", targetNamespace = "http://sab/")
                    String firstNameEng,
            @WebParam(name = "lastNameEng", targetNamespace = "http://sab/")
                    String lastNameEng,
            @WebParam(name = "taxCategory", targetNamespace = "http://sab/")
                    String taxCategory,
            @WebParam(name = "workTypesCode", targetNamespace = "http://sab/")
                    String workTypesCode,
            @WebParam(name = "workTypesText", targetNamespace = "http://sab/")
                    String workTypesText,
            @WebParam(name = "workTypesTaxReg", targetNamespace = "http://sab/")
                    String workTypesTaxReg,
            @WebParam(name = "stateRegDocSrNo", targetNamespace = "http://sab/")
                    String stateRegDocSrNo,
            @WebParam(name = "positionTypesCode", targetNamespace = "http://sab/")
                    String positionTypesCode,
            @WebParam(name = "positionTypesText", targetNamespace = "http://sab/")
                    String positionTypesText,
            @WebParam(name = "sectorClassificationCode", targetNamespace = "http://sab/")
                    String sectorClassificationCode,
            @WebParam(name = "sectorClassificationText", targetNamespace = "http://sab/")
                    String sectorClassificationText,
            @WebParam(name = "incomeSourcesCode", targetNamespace = "http://sab/")
                    String incomeSourcesCode,
            @WebParam(name = "incomeSourcesText", targetNamespace = "http://sab/")
                    String incomeSourcesText,
            @WebParam(name = "incomeLevelsCode", targetNamespace = "http://sab/")
                    String incomeLevelsCode,
            @WebParam(name = "propertyTypesCode", targetNamespace = "http://sab/")
                    String propertyTypesCode,
            @WebParam(name = "bankProductsCode", targetNamespace = "http://sab/")
                    String bankProductsCode,
            @WebParam(name = "workPlace", targetNamespace = "http://sab/")
                    String workPlace,
            @WebParam(name = "accountsInOtherBanks", targetNamespace = "http://sab/")
                    String accountsInOtherBanks,
            @WebParam(name = "isPublicPerson", targetNamespace = "http://sab/")
                    String isPublicPerson,
            @WebParam(name = "controller", targetNamespace = "http://sab/")
                    String controller,
            @WebParam(name = "activityTypes", targetNamespace = "http://sab/")
                    String activityTypes,
            @WebParam(name = "additionalInfo1", targetNamespace = "http://sab/")
                    String additionalInfo1,
            @WebParam(name = "additionalInfo2", targetNamespace = "http://sab/")
                    String additionalInfo2,
            @WebParam(name = "signDate", targetNamespace = "http://sab/")
                    XMLGregorianCalendar signDate,
            @WebParam(name = "addrKOATUUCode", targetNamespace = "http://sab/")
                    String addrKOATUUCode,
            @WebParam(name = "addrKOATUUClass", targetNamespace = "http://sab/")
                    Integer addrKOATUUClass,
            @WebParam(name = "addrCityType", targetNamespace = "http://sab/")
                    String addrCityType,
            @WebParam(name = "addrKOATUUCodeJur", targetNamespace = "http://sab/")
                    String addrKOATUUCodeJur,
            @WebParam(name = "addrKOATUUClassJur", targetNamespace = "http://sab/")
                    Integer addrKOATUUClassJur,
            @WebParam(name = "addrCityTypeJur", targetNamespace = "http://sab/")
                    String addrCityTypeJur,
            @WebParam(name = "gender", targetNamespace = "http://sab/")
                    String gender,
            @WebParam(name = "externalSystem", targetNamespace = "http://sab/")
                    String externalSystem,
            @WebParam(name = "finnClass", targetNamespace = "http://sab/")
                    Integer finnClass,
            @WebParam(name = "applicationType", targetNamespace = "http://sab/")
                    String applicationType,
            @WebParam(name = "fatcaQuest", targetNamespace = "http://sab/")
                    Integer fatcaQuest,
            @WebParam(name = "fatcaStatus", targetNamespace = "http://sab/")
                    Integer fatcaStatus,
            @WebParam(name = "workKind", targetNamespace = "http://sab/")
                    String workKind,
            @WebParam(name = "receipts", targetNamespace = "http://sab/")
                    Integer receipts,
            @WebParam(name = "fmqParamDate", targetNamespace = "http://sab/")
                    XMLGregorianCalendar fmqParamDate,
            @WebParam(name = "fmqParamComment", targetNamespace = "http://sab/")
                    String fmqParamComment);

    /**
     * 
     * ���������� "��������� ��� �����������" � "��� ��������� �����������"
     * 
     * 
     * @param taxAdmCode
     * @param contragentId
     * @param taxCategory
     * @param externalSystem
     * @return
     *     returns java.util.List<fasttack.UpdateContragentTaxInfoItem>
     */
    @WebMethod(action = "urn:updateContragentTaxInfo")
    @WebResult(name = "updateContragentTaxInfoItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "updateContragentTaxInfo", targetNamespace = "http://sab/", className = "fasttack.UpdateContragentTaxInfo")
    @ResponseWrapper(localName = "updateContragentTaxInfoResponse", targetNamespace = "http://sab/", className = "fasttack.UpdateContragentTaxInfoResponse")
    public List<UpdateContragentTaxInfoItem> updateContragentTaxInfo(
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    String contragentId,
            @WebParam(name = "taxAdmCode", targetNamespace = "http://sab/")
                    String taxAdmCode,
            @WebParam(name = "taxCategory", targetNamespace = "http://sab/")
                    int taxCategory,
            @WebParam(name = "externalSystem", targetNamespace = "http://sab/")
                    String externalSystem);

    /**
     * 
     * ������ ����� ������������ ��� ������ �����������-������� � ����� ������� ��������� �������. ���� ��������� �� ������ �� ������������ ������ ������. ����� ������� �� ���� �������� ����������, �� ������������� �������� ���� ��� ���� ����� ���������.
     * 
     * 
     * @param docSr
     * @param taxId
     * @param dateOfBirth
     * @param lastNameUkr
     * @param docNo
     * @return
     *     returns java.util.List<fasttack.Contragent>
     */
    @WebMethod(action = "urn:searchContragent")
    @WebResult(name = "contragent", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "searchContragent", targetNamespace = "http://sab/", className = "fasttack.SearchContragent")
    @ResponseWrapper(localName = "searchContragentResponse", targetNamespace = "http://sab/", className = "fasttack.SearchContragentResponse")
    public List<Contragent> searchContragent(
            @WebParam(name = "taxId", targetNamespace = "http://sab/")
                    String taxId,
            @WebParam(name = "docSr", targetNamespace = "http://sab/")
                    String docSr,
            @WebParam(name = "docNo", targetNamespace = "http://sab/")
                    String docNo,
            @WebParam(name = "dateOfBirth", targetNamespace = "http://sab/")
                    XMLGregorianCalendar dateOfBirth,
            @WebParam(name = "lastNameUkr", targetNamespace = "http://sab/")
                    String lastNameUkr);

    /**
     * 
     * @param k050
     * @param k1101
     * @param residence
     * @param k070
     * @param balanceAccount
     * @return
     *     returns java.util.List<fasttack.CheckCodeD5CodeD6Item>
     */
    @WebMethod(action = "urn:checkCodeD5CodeD6")
    @WebResult(name = "checkCodeD5CodeD6Item", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "checkCodeD5CodeD6", targetNamespace = "http://sab/", className = "fasttack.CheckCodeD5CodeD6")
    @ResponseWrapper(localName = "checkCodeD5CodeD6Response", targetNamespace = "http://sab/", className = "fasttack.CheckCodeD5CodeD6Response")
    public List<CheckCodeD5CodeD6Item> checkCodeD5CodeD6(
            @WebParam(name = "residence", targetNamespace = "http://sab/")
                    String residence,
            @WebParam(name = "k070", targetNamespace = "http://sab/")
                    String k070,
            @WebParam(name = "k050", targetNamespace = "http://sab/")
                    String k050,
            @WebParam(name = "k110_1", targetNamespace = "http://sab/")
                    String k1101,
            @WebParam(name = "balanceAccount", targetNamespace = "http://sab/")
                    String balanceAccount);

    /**
     * �������� ����������� ����� �������������
     * 
     * @param contragentId
     * @return
     *     returns java.util.List<fasttack.CheckResidenceChangeItem>
     */
    @WebMethod(action = "urn:checkResidenceChange")
    @WebResult(name = "checkResidenceChangeItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "checkResidenceChange", targetNamespace = "http://sab/", className = "fasttack.CheckResidenceChange")
    @ResponseWrapper(localName = "checkResidenceChangeResponse", targetNamespace = "http://sab/", className = "fasttack.CheckResidenceChangeResponse")
    public List<CheckResidenceChangeItem> checkResidenceChange(
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    String contragentId);

    /**
     * 
     * �������� ������������ ���������� ������ �����������
     * 
     * 
     * @param positionTypesText
     * @param incomeSourcesCode
     * @param sectorClassificationCode
     * @param ctrlIsPublicPerson
     * @param positionTypesCode
     * @param workKind
     * @param workTypesTaxReg
     * @param isPublicPerson
     * @param taxCategory
     * @param externalSystem
     * @param stateRegDocSrNo
     * @param activityTypes
     * @param isclient
     * @param receipts
     * @param propertyTypesCode
     * @param contragentId
     * @param workTypesCode
     * @param sectorClassificationText
     * @param incomeSourcesText
     * @param issigned
     * @param incomeLevelsCode
     * @param workPlace
     * @param workTypesText
     * @param bankProductsCode
     * @return
     *     returns java.util.List<fasttack.CheckFMItem>
     */
    @WebMethod(action = "urn:checkFM")
    @WebResult(name = "checkFMItem", targetNamespace = "http://sab/")
    @RequestWrapper(localName = "checkFM", targetNamespace = "http://sab/", className = "fasttack.CheckFM")
    @ResponseWrapper(localName = "checkFMResponse", targetNamespace = "http://sab/", className = "fasttack.CheckFMResponse")
    public List<CheckFMItem> checkFM(
            @WebParam(name = "contragentId", targetNamespace = "http://sab/")
                    String contragentId,
            @WebParam(name = "taxCategory", targetNamespace = "http://sab/")
                    String taxCategory,
            @WebParam(name = "externalSystem", targetNamespace = "http://sab/")
                    String externalSystem,
            @WebParam(name = "workTypesCode", targetNamespace = "http://sab/")
                    String workTypesCode,
            @WebParam(name = "workTypesText", targetNamespace = "http://sab/")
                    String workTypesText,
            @WebParam(name = "workTypesTaxReg", targetNamespace = "http://sab/")
                    String workTypesTaxReg,
            @WebParam(name = "stateRegDocSrNo", targetNamespace = "http://sab/")
                    String stateRegDocSrNo,
            @WebParam(name = "positionTypesCode", targetNamespace = "http://sab/")
                    String positionTypesCode,
            @WebParam(name = "positionTypesText", targetNamespace = "http://sab/")
                    String positionTypesText,
            @WebParam(name = "sectorClassificationCode", targetNamespace = "http://sab/")
                    String sectorClassificationCode,
            @WebParam(name = "sectorClassificationText", targetNamespace = "http://sab/")
                    String sectorClassificationText,
            @WebParam(name = "incomeSourcesCode", targetNamespace = "http://sab/")
                    String incomeSourcesCode,
            @WebParam(name = "incomeSourcesText", targetNamespace = "http://sab/")
                    String incomeSourcesText,
            @WebParam(name = "incomeLevelsCode", targetNamespace = "http://sab/")
                    String incomeLevelsCode,
            @WebParam(name = "propertyTypesCode", targetNamespace = "http://sab/")
                    String propertyTypesCode,
            @WebParam(name = "bankProductsCode", targetNamespace = "http://sab/")
                    String bankProductsCode,
            @WebParam(name = "workPlace", targetNamespace = "http://sab/")
                    String workPlace,
            @WebParam(name = "isPublicPerson", targetNamespace = "http://sab/")
                    String isPublicPerson,
            @WebParam(name = "CtrlIsPublicPerson", targetNamespace = "http://sab/")
                    String ctrlIsPublicPerson,
            @WebParam(name = "activityTypes", targetNamespace = "http://sab/")
                    String activityTypes,
            @WebParam(name = "work_kind", targetNamespace = "http://sab/")
                    String workKind,
            @WebParam(name = "receipts", targetNamespace = "http://sab/")
                    String receipts,
            @WebParam(name = "issigned", targetNamespace = "http://sab/")
                    String issigned,
            @WebParam(name = "isclient", targetNamespace = "http://sab/")
                    String isclient);

}
